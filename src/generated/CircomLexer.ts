// Generated from parser/CircomLexer.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
  ATN,
  ATNDeserializer,
  CharStream,
  DecisionState,
  DFA,
  Lexer,
  LexerATNSimulator,
  RuleContext,
  PredictionContextCache,
  Token,
} from "antlr4";
export default class CircomLexer extends Lexer {
  public static readonly VERSION = 1;
  public static readonly SIGNAL_TYPE = 2;
  public static readonly PRAGMA = 3;
  public static readonly CIRCOM = 4;
  public static readonly CUSTOM_TEMPLATES = 5;
  public static readonly INCLUDE = 6;
  public static readonly CUSTOM = 7;
  public static readonly PARALLEL = 8;
  public static readonly BUS = 9;
  public static readonly TEMPLATE = 10;
  public static readonly FUNCTION = 11;
  public static readonly MAIN = 12;
  public static readonly PUBLIC = 13;
  public static readonly COMPONENT = 14;
  public static readonly VAR = 15;
  public static readonly SIGNAL = 16;
  public static readonly INPUT = 17;
  public static readonly OUTPUT = 18;
  public static readonly IF = 19;
  public static readonly ELSE = 20;
  public static readonly FOR = 21;
  public static readonly WHILE = 22;
  public static readonly DO = 23;
  public static readonly LOG = 24;
  public static readonly ASSERT = 25;
  public static readonly RETURN = 26;
  public static readonly LP = 27;
  public static readonly RP = 28;
  public static readonly LB = 29;
  public static readonly RB = 30;
  public static readonly LC = 31;
  public static readonly RC = 32;
  public static readonly SEMICOLON = 33;
  public static readonly DOT = 34;
  public static readonly COMMA = 35;
  public static readonly UNDERSCORE = 36;
  public static readonly TERNARY_CONDITION = 37;
  public static readonly TERNARY_ALTERNATIVE = 38;
  public static readonly EQ_CONSTRAINT = 39;
  public static readonly LEFT_CONSTRAINT = 40;
  public static readonly LEFT_ASSIGNMENT = 41;
  public static readonly RIGHT_CONSTRAINT = 42;
  public static readonly RIGHT_ASSIGNMENT = 43;
  public static readonly SELF_OP = 44;
  public static readonly NOT = 45;
  public static readonly BNOT = 46;
  public static readonly POW = 47;
  public static readonly MUL = 48;
  public static readonly DIV = 49;
  public static readonly QUO = 50;
  public static readonly MOD = 51;
  public static readonly ADD = 52;
  public static readonly SUB = 53;
  public static readonly SHL = 54;
  public static readonly SHR = 55;
  public static readonly BAND = 56;
  public static readonly BXOR = 57;
  public static readonly BOR = 58;
  public static readonly EQ = 59;
  public static readonly NEQ = 60;
  public static readonly GT = 61;
  public static readonly LT = 62;
  public static readonly LE = 63;
  public static readonly GE = 64;
  public static readonly AND = 65;
  public static readonly OR = 66;
  public static readonly ASSIGNMENT = 67;
  public static readonly ASSIGNMENT_WITH_OP = 68;
  public static readonly ID = 69;
  public static readonly NUMBER = 70;
  public static readonly HEX = 71;
  public static readonly STRING = 72;
  public static readonly COMMENT = 73;
  public static readonly LINE_COMMENT = 74;
  public static readonly WS = 75;
  public static readonly EOF = Token.EOF;

  public static readonly channelNames: string[] = [
    "DEFAULT_TOKEN_CHANNEL",
    "HIDDEN",
  ];
  public static readonly literalNames: (string | null)[] = [
    null,
    null,
    null,
    "'pragma'",
    "'circom'",
    "'custom_templates'",
    "'include'",
    "'custom'",
    "'parallel'",
    "'bus'",
    "'template'",
    "'function'",
    "'main'",
    "'public'",
    "'component'",
    "'var'",
    "'signal'",
    "'input'",
    "'output'",
    "'if'",
    "'else'",
    "'for'",
    "'while'",
    "'do'",
    "'log'",
    "'assert'",
    "'return'",
    "'('",
    "')'",
    "'['",
    "']'",
    "'{'",
    "'}'",
    "';'",
    "'.'",
    "','",
    "'_'",
    "'?'",
    "':'",
    "'==='",
    "'<=='",
    "'<--'",
    "'==>'",
    "'-->'",
    null,
    "'!'",
    "'~'",
    "'**'",
    "'*'",
    "'/'",
    "'\\'",
    "'%'",
    "'+'",
    "'-'",
    "'<<'",
    "'>>'",
    "'&'",
    "'^'",
    "'|'",
    "'=='",
    "'!='",
    "'>'",
    "'<'",
    "'<='",
    "'>='",
    "'&&'",
    "'||'",
    "'='",
  ];
  public static readonly symbolicNames: (string | null)[] = [
    null,
    "VERSION",
    "SIGNAL_TYPE",
    "PRAGMA",
    "CIRCOM",
    "CUSTOM_TEMPLATES",
    "INCLUDE",
    "CUSTOM",
    "PARALLEL",
    "BUS",
    "TEMPLATE",
    "FUNCTION",
    "MAIN",
    "PUBLIC",
    "COMPONENT",
    "VAR",
    "SIGNAL",
    "INPUT",
    "OUTPUT",
    "IF",
    "ELSE",
    "FOR",
    "WHILE",
    "DO",
    "LOG",
    "ASSERT",
    "RETURN",
    "LP",
    "RP",
    "LB",
    "RB",
    "LC",
    "RC",
    "SEMICOLON",
    "DOT",
    "COMMA",
    "UNDERSCORE",
    "TERNARY_CONDITION",
    "TERNARY_ALTERNATIVE",
    "EQ_CONSTRAINT",
    "LEFT_CONSTRAINT",
    "LEFT_ASSIGNMENT",
    "RIGHT_CONSTRAINT",
    "RIGHT_ASSIGNMENT",
    "SELF_OP",
    "NOT",
    "BNOT",
    "POW",
    "MUL",
    "DIV",
    "QUO",
    "MOD",
    "ADD",
    "SUB",
    "SHL",
    "SHR",
    "BAND",
    "BXOR",
    "BOR",
    "EQ",
    "NEQ",
    "GT",
    "LT",
    "LE",
    "GE",
    "AND",
    "OR",
    "ASSIGNMENT",
    "ASSIGNMENT_WITH_OP",
    "ID",
    "NUMBER",
    "HEX",
    "STRING",
    "COMMENT",
    "LINE_COMMENT",
    "WS",
  ];
  public static readonly modeNames: string[] = ["DEFAULT_MODE"];

  public static readonly ruleNames: string[] = [
    "VERSION",
    "SIGNAL_TYPE",
    "PRAGMA",
    "CIRCOM",
    "CUSTOM_TEMPLATES",
    "INCLUDE",
    "CUSTOM",
    "PARALLEL",
    "BUS",
    "TEMPLATE",
    "FUNCTION",
    "MAIN",
    "PUBLIC",
    "COMPONENT",
    "VAR",
    "SIGNAL",
    "INPUT",
    "OUTPUT",
    "IF",
    "ELSE",
    "FOR",
    "WHILE",
    "DO",
    "LOG",
    "ASSERT",
    "RETURN",
    "LP",
    "RP",
    "LB",
    "RB",
    "LC",
    "RC",
    "SEMICOLON",
    "DOT",
    "COMMA",
    "UNDERSCORE",
    "TERNARY_CONDITION",
    "TERNARY_ALTERNATIVE",
    "EQ_CONSTRAINT",
    "LEFT_CONSTRAINT",
    "LEFT_ASSIGNMENT",
    "RIGHT_CONSTRAINT",
    "RIGHT_ASSIGNMENT",
    "SELF_OP",
    "NOT",
    "BNOT",
    "POW",
    "MUL",
    "DIV",
    "QUO",
    "MOD",
    "ADD",
    "SUB",
    "SHL",
    "SHR",
    "BAND",
    "BXOR",
    "BOR",
    "EQ",
    "NEQ",
    "GT",
    "LT",
    "LE",
    "GE",
    "AND",
    "OR",
    "ASSIGNMENT",
    "ASSIGNMENT_WITH_OP",
    "ID",
    "LETTER",
    "ID_SYMBOL",
    "NUMBER",
    "DIGIT",
    "HEX",
    "HEXDIGIT",
    "STRING",
    "ESC",
    "COMMENT",
    "LINE_COMMENT",
    "WS",
  ];

  constructor(input: CharStream) {
    super(input);
    this._interp = new LexerATNSimulator(
      this,
      CircomLexer._ATN,
      CircomLexer.DecisionsToDFA,
      new PredictionContextCache(),
    );
  }

  public get grammarFileName(): string {
    return "CircomLexer.g4";
  }

  public get literalNames(): (string | null)[] {
    return CircomLexer.literalNames;
  }
  public get symbolicNames(): (string | null)[] {
    return CircomLexer.symbolicNames;
  }
  public get ruleNames(): string[] {
    return CircomLexer.ruleNames;
  }

  public get serializedATN(): number[] {
    return CircomLexer._serializedATN;
  }

  public get channelNames(): string[] {
    return CircomLexer.channelNames;
  }

  public get modeNames(): string[] {
    return CircomLexer.modeNames;
  }

  public static readonly _serializedATN: number[] = [
    4, 0, 75, 550, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4,
    7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7,
    10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2,
    16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21, 7,
    21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2,
    27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7,
    32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2,
    38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7,
    43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2,
    49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7,
    54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2,
    60, 7, 60, 2, 61, 7, 61, 2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7,
    65, 2, 66, 7, 66, 2, 67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2,
    71, 7, 71, 2, 72, 7, 72, 2, 73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7,
    76, 2, 77, 7, 77, 2, 78, 7, 78, 2, 79, 7, 79, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
    1, 0, 1, 1, 1, 1, 3, 1, 170, 8, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
    1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1,
    4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5,
    1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1,
    6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8,
    1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1,
    10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1,
    11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1,
    13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1,
    14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1,
    16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1,
    18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1,
    21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1,
    23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1,
    25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1,
    29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1,
    34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1,
    39, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1,
    41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 43, 3, 43, 382, 8,
    43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1,
    48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1, 53, 1,
    53, 1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 57, 1, 57, 1, 58, 1,
    58, 1, 58, 1, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 1, 61, 1, 62, 1, 62, 1,
    62, 1, 63, 1, 63, 1, 63, 1, 64, 1, 64, 1, 64, 1, 65, 1, 65, 1, 65, 1, 66, 1,
    66, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1,
    67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 1,
    67, 1, 67, 1, 67, 1, 67, 1, 67, 1, 67, 3, 67, 466, 8, 67, 1, 68, 5, 68, 469,
    8, 68, 10, 68, 12, 68, 472, 9, 68, 1, 68, 1, 68, 1, 68, 1, 68, 5, 68, 478,
    8, 68, 10, 68, 12, 68, 481, 9, 68, 1, 69, 1, 69, 1, 70, 1, 70, 1, 71, 4, 71,
    488, 8, 71, 11, 71, 12, 71, 489, 1, 71, 3, 71, 493, 8, 71, 1, 72, 1, 72, 1,
    73, 1, 73, 1, 73, 4, 73, 500, 8, 73, 11, 73, 12, 73, 501, 1, 74, 1, 74, 1,
    75, 1, 75, 1, 75, 5, 75, 509, 8, 75, 10, 75, 12, 75, 512, 9, 75, 1, 75, 1,
    75, 1, 76, 1, 76, 1, 76, 1, 77, 1, 77, 1, 77, 1, 77, 5, 77, 523, 8, 77, 10,
    77, 12, 77, 526, 9, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 77, 1, 78, 1, 78, 1,
    78, 1, 78, 5, 78, 537, 8, 78, 10, 78, 12, 78, 540, 9, 78, 1, 78, 1, 78, 1,
    79, 4, 79, 545, 8, 79, 11, 79, 12, 79, 546, 1, 79, 1, 79, 2, 510, 524, 0,
    80, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21,
    11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20,
    41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59,
    30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39,
    79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97,
    49, 99, 50, 101, 51, 103, 52, 105, 53, 107, 54, 109, 55, 111, 56, 113, 57,
    115, 58, 117, 59, 119, 60, 121, 61, 123, 62, 125, 63, 127, 64, 129, 65, 131,
    66, 133, 67, 135, 68, 137, 69, 139, 0, 141, 0, 143, 70, 145, 0, 147, 71,
    149, 0, 151, 72, 153, 0, 155, 73, 157, 74, 159, 75, 1, 0, 7, 2, 0, 65, 90,
    97, 122, 2, 0, 36, 36, 95, 95, 1, 0, 48, 57, 3, 0, 48, 57, 65, 70, 97, 102,
    7, 0, 34, 34, 92, 92, 98, 98, 102, 102, 110, 110, 114, 114, 116, 116, 2, 0,
    10, 10, 13, 13, 3, 0, 9, 10, 12, 13, 32, 32, 569, 0, 1, 1, 0, 0, 0, 0, 3, 1,
    0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0,
    0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0,
    0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0,
    0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0,
    0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0,
    0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0,
    0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0,
    0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0,
    0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0,
    0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0,
    0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0,
    0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0,
    0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1,
    0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115,
    1, 0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0,
    123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0,
    0, 131, 1, 0, 0, 0, 0, 133, 1, 0, 0, 0, 0, 135, 1, 0, 0, 0, 0, 137, 1, 0, 0,
    0, 0, 143, 1, 0, 0, 0, 0, 147, 1, 0, 0, 0, 0, 151, 1, 0, 0, 0, 0, 155, 1, 0,
    0, 0, 0, 157, 1, 0, 0, 0, 0, 159, 1, 0, 0, 0, 1, 161, 1, 0, 0, 0, 3, 169, 1,
    0, 0, 0, 5, 171, 1, 0, 0, 0, 7, 178, 1, 0, 0, 0, 9, 185, 1, 0, 0, 0, 11,
    202, 1, 0, 0, 0, 13, 210, 1, 0, 0, 0, 15, 217, 1, 0, 0, 0, 17, 226, 1, 0, 0,
    0, 19, 230, 1, 0, 0, 0, 21, 239, 1, 0, 0, 0, 23, 248, 1, 0, 0, 0, 25, 253,
    1, 0, 0, 0, 27, 260, 1, 0, 0, 0, 29, 270, 1, 0, 0, 0, 31, 274, 1, 0, 0, 0,
    33, 281, 1, 0, 0, 0, 35, 287, 1, 0, 0, 0, 37, 294, 1, 0, 0, 0, 39, 297, 1,
    0, 0, 0, 41, 302, 1, 0, 0, 0, 43, 306, 1, 0, 0, 0, 45, 312, 1, 0, 0, 0, 47,
    315, 1, 0, 0, 0, 49, 319, 1, 0, 0, 0, 51, 326, 1, 0, 0, 0, 53, 333, 1, 0, 0,
    0, 55, 335, 1, 0, 0, 0, 57, 337, 1, 0, 0, 0, 59, 339, 1, 0, 0, 0, 61, 341,
    1, 0, 0, 0, 63, 343, 1, 0, 0, 0, 65, 345, 1, 0, 0, 0, 67, 347, 1, 0, 0, 0,
    69, 349, 1, 0, 0, 0, 71, 351, 1, 0, 0, 0, 73, 353, 1, 0, 0, 0, 75, 355, 1,
    0, 0, 0, 77, 357, 1, 0, 0, 0, 79, 361, 1, 0, 0, 0, 81, 365, 1, 0, 0, 0, 83,
    369, 1, 0, 0, 0, 85, 373, 1, 0, 0, 0, 87, 381, 1, 0, 0, 0, 89, 383, 1, 0, 0,
    0, 91, 385, 1, 0, 0, 0, 93, 387, 1, 0, 0, 0, 95, 390, 1, 0, 0, 0, 97, 392,
    1, 0, 0, 0, 99, 394, 1, 0, 0, 0, 101, 396, 1, 0, 0, 0, 103, 398, 1, 0, 0, 0,
    105, 400, 1, 0, 0, 0, 107, 402, 1, 0, 0, 0, 109, 405, 1, 0, 0, 0, 111, 408,
    1, 0, 0, 0, 113, 410, 1, 0, 0, 0, 115, 412, 1, 0, 0, 0, 117, 414, 1, 0, 0,
    0, 119, 417, 1, 0, 0, 0, 121, 420, 1, 0, 0, 0, 123, 422, 1, 0, 0, 0, 125,
    424, 1, 0, 0, 0, 127, 427, 1, 0, 0, 0, 129, 430, 1, 0, 0, 0, 131, 433, 1, 0,
    0, 0, 133, 436, 1, 0, 0, 0, 135, 465, 1, 0, 0, 0, 137, 470, 1, 0, 0, 0, 139,
    482, 1, 0, 0, 0, 141, 484, 1, 0, 0, 0, 143, 492, 1, 0, 0, 0, 145, 494, 1, 0,
    0, 0, 147, 496, 1, 0, 0, 0, 149, 503, 1, 0, 0, 0, 151, 505, 1, 0, 0, 0, 153,
    515, 1, 0, 0, 0, 155, 518, 1, 0, 0, 0, 157, 532, 1, 0, 0, 0, 159, 544, 1, 0,
    0, 0, 161, 162, 3, 143, 71, 0, 162, 163, 5, 46, 0, 0, 163, 164, 3, 143, 71,
    0, 164, 165, 5, 46, 0, 0, 165, 166, 3, 143, 71, 0, 166, 2, 1, 0, 0, 0, 167,
    170, 3, 33, 16, 0, 168, 170, 3, 35, 17, 0, 169, 167, 1, 0, 0, 0, 169, 168,
    1, 0, 0, 0, 170, 4, 1, 0, 0, 0, 171, 172, 5, 112, 0, 0, 172, 173, 5, 114, 0,
    0, 173, 174, 5, 97, 0, 0, 174, 175, 5, 103, 0, 0, 175, 176, 5, 109, 0, 0,
    176, 177, 5, 97, 0, 0, 177, 6, 1, 0, 0, 0, 178, 179, 5, 99, 0, 0, 179, 180,
    5, 105, 0, 0, 180, 181, 5, 114, 0, 0, 181, 182, 5, 99, 0, 0, 182, 183, 5,
    111, 0, 0, 183, 184, 5, 109, 0, 0, 184, 8, 1, 0, 0, 0, 185, 186, 5, 99, 0,
    0, 186, 187, 5, 117, 0, 0, 187, 188, 5, 115, 0, 0, 188, 189, 5, 116, 0, 0,
    189, 190, 5, 111, 0, 0, 190, 191, 5, 109, 0, 0, 191, 192, 5, 95, 0, 0, 192,
    193, 5, 116, 0, 0, 193, 194, 5, 101, 0, 0, 194, 195, 5, 109, 0, 0, 195, 196,
    5, 112, 0, 0, 196, 197, 5, 108, 0, 0, 197, 198, 5, 97, 0, 0, 198, 199, 5,
    116, 0, 0, 199, 200, 5, 101, 0, 0, 200, 201, 5, 115, 0, 0, 201, 10, 1, 0, 0,
    0, 202, 203, 5, 105, 0, 0, 203, 204, 5, 110, 0, 0, 204, 205, 5, 99, 0, 0,
    205, 206, 5, 108, 0, 0, 206, 207, 5, 117, 0, 0, 207, 208, 5, 100, 0, 0, 208,
    209, 5, 101, 0, 0, 209, 12, 1, 0, 0, 0, 210, 211, 5, 99, 0, 0, 211, 212, 5,
    117, 0, 0, 212, 213, 5, 115, 0, 0, 213, 214, 5, 116, 0, 0, 214, 215, 5, 111,
    0, 0, 215, 216, 5, 109, 0, 0, 216, 14, 1, 0, 0, 0, 217, 218, 5, 112, 0, 0,
    218, 219, 5, 97, 0, 0, 219, 220, 5, 114, 0, 0, 220, 221, 5, 97, 0, 0, 221,
    222, 5, 108, 0, 0, 222, 223, 5, 108, 0, 0, 223, 224, 5, 101, 0, 0, 224, 225,
    5, 108, 0, 0, 225, 16, 1, 0, 0, 0, 226, 227, 5, 98, 0, 0, 227, 228, 5, 117,
    0, 0, 228, 229, 5, 115, 0, 0, 229, 18, 1, 0, 0, 0, 230, 231, 5, 116, 0, 0,
    231, 232, 5, 101, 0, 0, 232, 233, 5, 109, 0, 0, 233, 234, 5, 112, 0, 0, 234,
    235, 5, 108, 0, 0, 235, 236, 5, 97, 0, 0, 236, 237, 5, 116, 0, 0, 237, 238,
    5, 101, 0, 0, 238, 20, 1, 0, 0, 0, 239, 240, 5, 102, 0, 0, 240, 241, 5, 117,
    0, 0, 241, 242, 5, 110, 0, 0, 242, 243, 5, 99, 0, 0, 243, 244, 5, 116, 0, 0,
    244, 245, 5, 105, 0, 0, 245, 246, 5, 111, 0, 0, 246, 247, 5, 110, 0, 0, 247,
    22, 1, 0, 0, 0, 248, 249, 5, 109, 0, 0, 249, 250, 5, 97, 0, 0, 250, 251, 5,
    105, 0, 0, 251, 252, 5, 110, 0, 0, 252, 24, 1, 0, 0, 0, 253, 254, 5, 112, 0,
    0, 254, 255, 5, 117, 0, 0, 255, 256, 5, 98, 0, 0, 256, 257, 5, 108, 0, 0,
    257, 258, 5, 105, 0, 0, 258, 259, 5, 99, 0, 0, 259, 26, 1, 0, 0, 0, 260,
    261, 5, 99, 0, 0, 261, 262, 5, 111, 0, 0, 262, 263, 5, 109, 0, 0, 263, 264,
    5, 112, 0, 0, 264, 265, 5, 111, 0, 0, 265, 266, 5, 110, 0, 0, 266, 267, 5,
    101, 0, 0, 267, 268, 5, 110, 0, 0, 268, 269, 5, 116, 0, 0, 269, 28, 1, 0, 0,
    0, 270, 271, 5, 118, 0, 0, 271, 272, 5, 97, 0, 0, 272, 273, 5, 114, 0, 0,
    273, 30, 1, 0, 0, 0, 274, 275, 5, 115, 0, 0, 275, 276, 5, 105, 0, 0, 276,
    277, 5, 103, 0, 0, 277, 278, 5, 110, 0, 0, 278, 279, 5, 97, 0, 0, 279, 280,
    5, 108, 0, 0, 280, 32, 1, 0, 0, 0, 281, 282, 5, 105, 0, 0, 282, 283, 5, 110,
    0, 0, 283, 284, 5, 112, 0, 0, 284, 285, 5, 117, 0, 0, 285, 286, 5, 116, 0,
    0, 286, 34, 1, 0, 0, 0, 287, 288, 5, 111, 0, 0, 288, 289, 5, 117, 0, 0, 289,
    290, 5, 116, 0, 0, 290, 291, 5, 112, 0, 0, 291, 292, 5, 117, 0, 0, 292, 293,
    5, 116, 0, 0, 293, 36, 1, 0, 0, 0, 294, 295, 5, 105, 0, 0, 295, 296, 5, 102,
    0, 0, 296, 38, 1, 0, 0, 0, 297, 298, 5, 101, 0, 0, 298, 299, 5, 108, 0, 0,
    299, 300, 5, 115, 0, 0, 300, 301, 5, 101, 0, 0, 301, 40, 1, 0, 0, 0, 302,
    303, 5, 102, 0, 0, 303, 304, 5, 111, 0, 0, 304, 305, 5, 114, 0, 0, 305, 42,
    1, 0, 0, 0, 306, 307, 5, 119, 0, 0, 307, 308, 5, 104, 0, 0, 308, 309, 5,
    105, 0, 0, 309, 310, 5, 108, 0, 0, 310, 311, 5, 101, 0, 0, 311, 44, 1, 0, 0,
    0, 312, 313, 5, 100, 0, 0, 313, 314, 5, 111, 0, 0, 314, 46, 1, 0, 0, 0, 315,
    316, 5, 108, 0, 0, 316, 317, 5, 111, 0, 0, 317, 318, 5, 103, 0, 0, 318, 48,
    1, 0, 0, 0, 319, 320, 5, 97, 0, 0, 320, 321, 5, 115, 0, 0, 321, 322, 5, 115,
    0, 0, 322, 323, 5, 101, 0, 0, 323, 324, 5, 114, 0, 0, 324, 325, 5, 116, 0,
    0, 325, 50, 1, 0, 0, 0, 326, 327, 5, 114, 0, 0, 327, 328, 5, 101, 0, 0, 328,
    329, 5, 116, 0, 0, 329, 330, 5, 117, 0, 0, 330, 331, 5, 114, 0, 0, 331, 332,
    5, 110, 0, 0, 332, 52, 1, 0, 0, 0, 333, 334, 5, 40, 0, 0, 334, 54, 1, 0, 0,
    0, 335, 336, 5, 41, 0, 0, 336, 56, 1, 0, 0, 0, 337, 338, 5, 91, 0, 0, 338,
    58, 1, 0, 0, 0, 339, 340, 5, 93, 0, 0, 340, 60, 1, 0, 0, 0, 341, 342, 5,
    123, 0, 0, 342, 62, 1, 0, 0, 0, 343, 344, 5, 125, 0, 0, 344, 64, 1, 0, 0, 0,
    345, 346, 5, 59, 0, 0, 346, 66, 1, 0, 0, 0, 347, 348, 5, 46, 0, 0, 348, 68,
    1, 0, 0, 0, 349, 350, 5, 44, 0, 0, 350, 70, 1, 0, 0, 0, 351, 352, 5, 95, 0,
    0, 352, 72, 1, 0, 0, 0, 353, 354, 5, 63, 0, 0, 354, 74, 1, 0, 0, 0, 355,
    356, 5, 58, 0, 0, 356, 76, 1, 0, 0, 0, 357, 358, 5, 61, 0, 0, 358, 359, 5,
    61, 0, 0, 359, 360, 5, 61, 0, 0, 360, 78, 1, 0, 0, 0, 361, 362, 5, 60, 0, 0,
    362, 363, 5, 61, 0, 0, 363, 364, 5, 61, 0, 0, 364, 80, 1, 0, 0, 0, 365, 366,
    5, 60, 0, 0, 366, 367, 5, 45, 0, 0, 367, 368, 5, 45, 0, 0, 368, 82, 1, 0, 0,
    0, 369, 370, 5, 61, 0, 0, 370, 371, 5, 61, 0, 0, 371, 372, 5, 62, 0, 0, 372,
    84, 1, 0, 0, 0, 373, 374, 5, 45, 0, 0, 374, 375, 5, 45, 0, 0, 375, 376, 5,
    62, 0, 0, 376, 86, 1, 0, 0, 0, 377, 378, 5, 43, 0, 0, 378, 382, 5, 43, 0, 0,
    379, 380, 5, 45, 0, 0, 380, 382, 5, 45, 0, 0, 381, 377, 1, 0, 0, 0, 381,
    379, 1, 0, 0, 0, 382, 88, 1, 0, 0, 0, 383, 384, 5, 33, 0, 0, 384, 90, 1, 0,
    0, 0, 385, 386, 5, 126, 0, 0, 386, 92, 1, 0, 0, 0, 387, 388, 5, 42, 0, 0,
    388, 389, 5, 42, 0, 0, 389, 94, 1, 0, 0, 0, 390, 391, 5, 42, 0, 0, 391, 96,
    1, 0, 0, 0, 392, 393, 5, 47, 0, 0, 393, 98, 1, 0, 0, 0, 394, 395, 5, 92, 0,
    0, 395, 100, 1, 0, 0, 0, 396, 397, 5, 37, 0, 0, 397, 102, 1, 0, 0, 0, 398,
    399, 5, 43, 0, 0, 399, 104, 1, 0, 0, 0, 400, 401, 5, 45, 0, 0, 401, 106, 1,
    0, 0, 0, 402, 403, 5, 60, 0, 0, 403, 404, 5, 60, 0, 0, 404, 108, 1, 0, 0, 0,
    405, 406, 5, 62, 0, 0, 406, 407, 5, 62, 0, 0, 407, 110, 1, 0, 0, 0, 408,
    409, 5, 38, 0, 0, 409, 112, 1, 0, 0, 0, 410, 411, 5, 94, 0, 0, 411, 114, 1,
    0, 0, 0, 412, 413, 5, 124, 0, 0, 413, 116, 1, 0, 0, 0, 414, 415, 5, 61, 0,
    0, 415, 416, 5, 61, 0, 0, 416, 118, 1, 0, 0, 0, 417, 418, 5, 33, 0, 0, 418,
    419, 5, 61, 0, 0, 419, 120, 1, 0, 0, 0, 420, 421, 5, 62, 0, 0, 421, 122, 1,
    0, 0, 0, 422, 423, 5, 60, 0, 0, 423, 124, 1, 0, 0, 0, 424, 425, 5, 60, 0, 0,
    425, 426, 5, 61, 0, 0, 426, 126, 1, 0, 0, 0, 427, 428, 5, 62, 0, 0, 428,
    429, 5, 61, 0, 0, 429, 128, 1, 0, 0, 0, 430, 431, 5, 38, 0, 0, 431, 432, 5,
    38, 0, 0, 432, 130, 1, 0, 0, 0, 433, 434, 5, 124, 0, 0, 434, 435, 5, 124, 0,
    0, 435, 132, 1, 0, 0, 0, 436, 437, 5, 61, 0, 0, 437, 134, 1, 0, 0, 0, 438,
    439, 5, 43, 0, 0, 439, 466, 5, 61, 0, 0, 440, 441, 5, 45, 0, 0, 441, 466, 5,
    61, 0, 0, 442, 443, 5, 42, 0, 0, 443, 466, 5, 61, 0, 0, 444, 445, 5, 42, 0,
    0, 445, 446, 5, 42, 0, 0, 446, 466, 5, 61, 0, 0, 447, 448, 5, 47, 0, 0, 448,
    466, 5, 61, 0, 0, 449, 450, 5, 92, 0, 0, 450, 466, 5, 61, 0, 0, 451, 452, 5,
    37, 0, 0, 452, 466, 5, 61, 0, 0, 453, 454, 5, 60, 0, 0, 454, 455, 5, 60, 0,
    0, 455, 466, 5, 61, 0, 0, 456, 457, 5, 62, 0, 0, 457, 458, 5, 62, 0, 0, 458,
    466, 5, 61, 0, 0, 459, 460, 5, 38, 0, 0, 460, 466, 5, 61, 0, 0, 461, 462, 5,
    94, 0, 0, 462, 466, 5, 61, 0, 0, 463, 464, 5, 124, 0, 0, 464, 466, 5, 61, 0,
    0, 465, 438, 1, 0, 0, 0, 465, 440, 1, 0, 0, 0, 465, 442, 1, 0, 0, 0, 465,
    444, 1, 0, 0, 0, 465, 447, 1, 0, 0, 0, 465, 449, 1, 0, 0, 0, 465, 451, 1, 0,
    0, 0, 465, 453, 1, 0, 0, 0, 465, 456, 1, 0, 0, 0, 465, 459, 1, 0, 0, 0, 465,
    461, 1, 0, 0, 0, 465, 463, 1, 0, 0, 0, 466, 136, 1, 0, 0, 0, 467, 469, 3,
    141, 70, 0, 468, 467, 1, 0, 0, 0, 469, 472, 1, 0, 0, 0, 470, 468, 1, 0, 0,
    0, 470, 471, 1, 0, 0, 0, 471, 473, 1, 0, 0, 0, 472, 470, 1, 0, 0, 0, 473,
    479, 3, 139, 69, 0, 474, 478, 3, 139, 69, 0, 475, 478, 3, 141, 70, 0, 476,
    478, 3, 145, 72, 0, 477, 474, 1, 0, 0, 0, 477, 475, 1, 0, 0, 0, 477, 476, 1,
    0, 0, 0, 478, 481, 1, 0, 0, 0, 479, 477, 1, 0, 0, 0, 479, 480, 1, 0, 0, 0,
    480, 138, 1, 0, 0, 0, 481, 479, 1, 0, 0, 0, 482, 483, 7, 0, 0, 0, 483, 140,
    1, 0, 0, 0, 484, 485, 7, 1, 0, 0, 485, 142, 1, 0, 0, 0, 486, 488, 3, 145,
    72, 0, 487, 486, 1, 0, 0, 0, 488, 489, 1, 0, 0, 0, 489, 487, 1, 0, 0, 0,
    489, 490, 1, 0, 0, 0, 490, 493, 1, 0, 0, 0, 491, 493, 3, 147, 73, 0, 492,
    487, 1, 0, 0, 0, 492, 491, 1, 0, 0, 0, 493, 144, 1, 0, 0, 0, 494, 495, 7, 2,
    0, 0, 495, 146, 1, 0, 0, 0, 496, 497, 5, 48, 0, 0, 497, 499, 5, 120, 0, 0,
    498, 500, 3, 149, 74, 0, 499, 498, 1, 0, 0, 0, 500, 501, 1, 0, 0, 0, 501,
    499, 1, 0, 0, 0, 501, 502, 1, 0, 0, 0, 502, 148, 1, 0, 0, 0, 503, 504, 7, 3,
    0, 0, 504, 150, 1, 0, 0, 0, 505, 510, 5, 34, 0, 0, 506, 509, 3, 153, 76, 0,
    507, 509, 9, 0, 0, 0, 508, 506, 1, 0, 0, 0, 508, 507, 1, 0, 0, 0, 509, 512,
    1, 0, 0, 0, 510, 511, 1, 0, 0, 0, 510, 508, 1, 0, 0, 0, 511, 513, 1, 0, 0,
    0, 512, 510, 1, 0, 0, 0, 513, 514, 5, 34, 0, 0, 514, 152, 1, 0, 0, 0, 515,
    516, 5, 92, 0, 0, 516, 517, 7, 4, 0, 0, 517, 154, 1, 0, 0, 0, 518, 519, 5,
    47, 0, 0, 519, 520, 5, 42, 0, 0, 520, 524, 1, 0, 0, 0, 521, 523, 9, 0, 0, 0,
    522, 521, 1, 0, 0, 0, 523, 526, 1, 0, 0, 0, 524, 525, 1, 0, 0, 0, 524, 522,
    1, 0, 0, 0, 525, 527, 1, 0, 0, 0, 526, 524, 1, 0, 0, 0, 527, 528, 5, 42, 0,
    0, 528, 529, 5, 47, 0, 0, 529, 530, 1, 0, 0, 0, 530, 531, 6, 77, 0, 0, 531,
    156, 1, 0, 0, 0, 532, 533, 5, 47, 0, 0, 533, 534, 5, 47, 0, 0, 534, 538, 1,
    0, 0, 0, 535, 537, 8, 5, 0, 0, 536, 535, 1, 0, 0, 0, 537, 540, 1, 0, 0, 0,
    538, 536, 1, 0, 0, 0, 538, 539, 1, 0, 0, 0, 539, 541, 1, 0, 0, 0, 540, 538,
    1, 0, 0, 0, 541, 542, 6, 78, 0, 0, 542, 158, 1, 0, 0, 0, 543, 545, 7, 6, 0,
    0, 544, 543, 1, 0, 0, 0, 545, 546, 1, 0, 0, 0, 546, 544, 1, 0, 0, 0, 546,
    547, 1, 0, 0, 0, 547, 548, 1, 0, 0, 0, 548, 549, 6, 79, 0, 0, 549, 160, 1,
    0, 0, 0, 15, 0, 169, 381, 465, 470, 477, 479, 489, 492, 501, 508, 510, 524,
    538, 546, 1, 0, 1, 0,
  ];

  private static __ATN: ATN;
  public static get _ATN(): ATN {
    if (!CircomLexer.__ATN) {
      CircomLexer.__ATN = new ATNDeserializer().deserialize(
        CircomLexer._serializedATN,
      );
    }

    return CircomLexer.__ATN;
  }

  static DecisionsToDFA = CircomLexer._ATN.decisionToState.map(
    (ds: DecisionState, index: number) => new DFA(ds, index),
  );
}
