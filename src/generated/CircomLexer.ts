// Generated from parser/Circom.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
  ATN,
  ATNDeserializer,
  CharStream,
  DecisionState,
  DFA,
  Lexer,
  LexerATNSimulator,
  RuleContext,
  PredictionContextCache,
  Token,
} from "antlr4";
export default class CircomLexer extends Lexer {
  public static readonly T__0 = 1;
  public static readonly T__1 = 2;
  public static readonly T__2 = 3;
  public static readonly T__3 = 4;
  public static readonly VERSION = 5;
  public static readonly PACKAGE_NAME = 6;
  public static readonly SIGNAL_TYPE = 7;
  public static readonly SIGNAL = 8;
  public static readonly INPUT = 9;
  public static readonly OUTPUT = 10;
  public static readonly PUBLIC = 11;
  public static readonly TEMPLATE = 12;
  public static readonly COMPONENT = 13;
  public static readonly VAR = 14;
  public static readonly FUNCTION = 15;
  public static readonly RETURN = 16;
  public static readonly IF = 17;
  public static readonly ELSE = 18;
  public static readonly FOR = 19;
  public static readonly WHILE = 20;
  public static readonly DO = 21;
  public static readonly LOG = 22;
  public static readonly ASSERT = 23;
  public static readonly INCLUDE = 24;
  public static readonly CUSTOM = 25;
  public static readonly PRAGMA = 26;
  public static readonly CIRCOM = 27;
  public static readonly CUSTOM_TEMPLATES = 28;
  public static readonly MAIN = 29;
  public static readonly PARALLEL = 30;
  public static readonly LP = 31;
  public static readonly RP = 32;
  public static readonly LB = 33;
  public static readonly RB = 34;
  public static readonly LC = 35;
  public static readonly RC = 36;
  public static readonly SEMICOLON = 37;
  public static readonly COMMA = 38;
  public static readonly ASSIGNMENT = 39;
  public static readonly ASSIGNMENT_OP = 40;
  public static readonly SELF_OP = 41;
  public static readonly LEFT_ASSIGNMENT = 42;
  public static readonly RIGHT_ASSIGNMENT = 43;
  public static readonly CONSTRAINT_EQ = 44;
  public static readonly NOT = 45;
  public static readonly BNOT = 46;
  public static readonly POW = 47;
  public static readonly MUL = 48;
  public static readonly DIV = 49;
  public static readonly QUO = 50;
  public static readonly MOD = 51;
  public static readonly ADD = 52;
  public static readonly SUB = 53;
  public static readonly SHL = 54;
  public static readonly SHR = 55;
  public static readonly BAND = 56;
  public static readonly BXOR = 57;
  public static readonly BOR = 58;
  public static readonly EQ = 59;
  public static readonly NEQ = 60;
  public static readonly GT = 61;
  public static readonly LT = 62;
  public static readonly LE = 63;
  public static readonly GE = 64;
  public static readonly AND = 65;
  public static readonly OR = 66;
  public static readonly ID = 67;
  public static readonly NUMBER = 68;
  public static readonly STRING = 69;
  public static readonly COMMENT = 70;
  public static readonly LINE_COMMENT = 71;
  public static readonly WS = 72;
  public static readonly EOF = Token.EOF;

  public static readonly channelNames: string[] = [
    "DEFAULT_TOKEN_CHANNEL",
    "HIDDEN",
  ];
  public static readonly literalNames: (string | null)[] = [
    null,
    "'.'",
    "'_'",
    "'?'",
    "':'",
    null,
    null,
    null,
    "'signal'",
    "'input'",
    "'output'",
    "'public'",
    "'template'",
    "'component'",
    "'var'",
    "'function'",
    "'return'",
    "'if'",
    "'else'",
    "'for'",
    "'while'",
    "'do'",
    "'log'",
    "'assert'",
    "'include'",
    "'custom'",
    "'pragma'",
    "'circom'",
    "'custom_templates'",
    "'main'",
    "'parallel'",
    "'('",
    "')'",
    "'['",
    "']'",
    "'{'",
    "'}'",
    "';'",
    "','",
    "'='",
    null,
    null,
    null,
    null,
    "'==='",
    "'!'",
    "'~'",
    "'**'",
    "'*'",
    "'/'",
    "'\\'",
    "'%'",
    "'+'",
    "'-'",
    "'<<'",
    "'>>'",
    "'&'",
    "'^'",
    "'|'",
    "'=='",
    "'!='",
    "'>'",
    "'<'",
    "'>='",
    "'<='",
    "'&&'",
    "'||'",
  ];
  public static readonly symbolicNames: (string | null)[] = [
    null,
    null,
    null,
    null,
    null,
    "VERSION",
    "PACKAGE_NAME",
    "SIGNAL_TYPE",
    "SIGNAL",
    "INPUT",
    "OUTPUT",
    "PUBLIC",
    "TEMPLATE",
    "COMPONENT",
    "VAR",
    "FUNCTION",
    "RETURN",
    "IF",
    "ELSE",
    "FOR",
    "WHILE",
    "DO",
    "LOG",
    "ASSERT",
    "INCLUDE",
    "CUSTOM",
    "PRAGMA",
    "CIRCOM",
    "CUSTOM_TEMPLATES",
    "MAIN",
    "PARALLEL",
    "LP",
    "RP",
    "LB",
    "RB",
    "LC",
    "RC",
    "SEMICOLON",
    "COMMA",
    "ASSIGNMENT",
    "ASSIGNMENT_OP",
    "SELF_OP",
    "LEFT_ASSIGNMENT",
    "RIGHT_ASSIGNMENT",
    "CONSTRAINT_EQ",
    "NOT",
    "BNOT",
    "POW",
    "MUL",
    "DIV",
    "QUO",
    "MOD",
    "ADD",
    "SUB",
    "SHL",
    "SHR",
    "BAND",
    "BXOR",
    "BOR",
    "EQ",
    "NEQ",
    "GT",
    "LT",
    "LE",
    "GE",
    "AND",
    "OR",
    "ID",
    "NUMBER",
    "STRING",
    "COMMENT",
    "LINE_COMMENT",
    "WS",
  ];
  public static readonly modeNames: string[] = ["DEFAULT_MODE"];

  public static readonly ruleNames: string[] = [
    "T__0",
    "T__1",
    "T__2",
    "T__3",
    "VERSION",
    "PACKAGE_NAME",
    "SIGNAL_TYPE",
    "SIGNAL",
    "INPUT",
    "OUTPUT",
    "PUBLIC",
    "TEMPLATE",
    "COMPONENT",
    "VAR",
    "FUNCTION",
    "RETURN",
    "IF",
    "ELSE",
    "FOR",
    "WHILE",
    "DO",
    "LOG",
    "ASSERT",
    "INCLUDE",
    "CUSTOM",
    "PRAGMA",
    "CIRCOM",
    "CUSTOM_TEMPLATES",
    "MAIN",
    "PARALLEL",
    "LP",
    "RP",
    "LB",
    "RB",
    "LC",
    "RC",
    "SEMICOLON",
    "COMMA",
    "ASSIGNMENT",
    "ASSIGNMENT_OP",
    "SELF_OP",
    "LEFT_ASSIGNMENT",
    "RIGHT_ASSIGNMENT",
    "CONSTRAINT_EQ",
    "NOT",
    "BNOT",
    "POW",
    "MUL",
    "DIV",
    "QUO",
    "MOD",
    "ADD",
    "SUB",
    "SHL",
    "SHR",
    "BAND",
    "BXOR",
    "BOR",
    "EQ",
    "NEQ",
    "GT",
    "LT",
    "LE",
    "GE",
    "AND",
    "OR",
    "ID",
    "LETTER",
    "NUMBER",
    "DIGIT",
    "STRING",
    "ESC",
    "COMMENT",
    "LINE_COMMENT",
    "WS",
  ];

  constructor(input: CharStream) {
    super(input);
    this._interp = new LexerATNSimulator(
      this,
      CircomLexer._ATN,
      CircomLexer.DecisionsToDFA,
      new PredictionContextCache(),
    );
  }

  public get grammarFileName(): string {
    return "Circom.g4";
  }

  public get literalNames(): (string | null)[] {
    return CircomLexer.literalNames;
  }
  public get symbolicNames(): (string | null)[] {
    return CircomLexer.symbolicNames;
  }
  public get ruleNames(): string[] {
    return CircomLexer.ruleNames;
  }

  public get serializedATN(): number[] {
    return CircomLexer._serializedATN;
  }

  public get channelNames(): string[] {
    return CircomLexer.channelNames;
  }

  public get modeNames(): string[] {
    return CircomLexer.modeNames;
  }

  public static readonly _serializedATN: number[] = [
    4, 0, 72, 522, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4,
    7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7,
    10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2,
    16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21, 7,
    21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2,
    27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7,
    32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2,
    38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7,
    43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2,
    49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7,
    54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2,
    60, 7, 60, 2, 61, 7, 61, 2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7,
    65, 2, 66, 7, 66, 2, 67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2,
    71, 7, 71, 2, 72, 7, 72, 2, 73, 7, 73, 2, 74, 7, 74, 1, 0, 1, 0, 1, 1, 1, 1,
    1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1,
    6, 1, 6, 3, 6, 170, 8, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1,
    8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10,
    1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11,
    1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12,
    1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14,
    1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15,
    1, 15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18,
    1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20,
    1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22,
    1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24,
    1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25,
    1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27,
    1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27,
    1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29,
    1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32,
    1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38,
    1, 38, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39,
    1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39,
    1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 3, 39, 375, 8, 39, 1, 40, 1, 40,
    1, 40, 1, 40, 3, 40, 381, 8, 40, 1, 41, 1, 41, 1, 41, 1, 41, 1, 41, 1, 41,
    3, 41, 389, 8, 41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 3, 42, 397, 8,
    42, 1, 43, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1,
    46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1,
    52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1,
    56, 1, 57, 1, 57, 1, 58, 1, 58, 1, 58, 1, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1,
    61, 1, 61, 1, 62, 1, 62, 1, 62, 1, 63, 1, 63, 1, 63, 1, 64, 1, 64, 1, 64, 1,
    65, 1, 65, 1, 65, 1, 66, 1, 66, 1, 66, 5, 66, 459, 8, 66, 10, 66, 12, 66,
    462, 9, 66, 1, 67, 1, 67, 1, 68, 4, 68, 467, 8, 68, 11, 68, 12, 68, 468, 1,
    69, 1, 69, 1, 70, 1, 70, 1, 70, 5, 70, 476, 8, 70, 10, 70, 12, 70, 479, 9,
    70, 1, 70, 1, 70, 1, 71, 1, 71, 1, 71, 1, 72, 1, 72, 1, 72, 1, 72, 5, 72,
    490, 8, 72, 10, 72, 12, 72, 493, 9, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72,
    1, 73, 1, 73, 1, 73, 1, 73, 5, 73, 504, 8, 73, 10, 73, 12, 73, 507, 9, 73,
    1, 73, 3, 73, 510, 8, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1, 74, 4, 74, 517, 8,
    74, 11, 74, 12, 74, 518, 1, 74, 1, 74, 2, 477, 491, 0, 75, 1, 1, 3, 2, 5, 3,
    7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27,
    14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23,
    47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65,
    33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42,
    85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51,
    103, 52, 105, 53, 107, 54, 109, 55, 111, 56, 113, 57, 115, 58, 117, 59, 119,
    60, 121, 61, 123, 62, 125, 63, 127, 64, 129, 65, 131, 66, 133, 67, 135, 0,
    137, 68, 139, 0, 141, 69, 143, 0, 145, 70, 147, 71, 149, 72, 1, 0, 5, 5, 0,
    36, 36, 65, 90, 95, 95, 97, 122, 128, 255, 1, 0, 48, 57, 7, 0, 34, 34, 92,
    92, 98, 98, 102, 102, 110, 110, 114, 114, 116, 116, 2, 0, 10, 10, 13, 13, 3,
    0, 9, 10, 12, 13, 32, 32, 542, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1,
    0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0,
    0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0,
    0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0,
    0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0,
    0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0,
    0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0,
    0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0,
    0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0,
    0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0,
    0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0,
    0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0,
    0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0,
    0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1,
    0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117,
    1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0,
    125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 0, 131, 1, 0, 0, 0,
    0, 133, 1, 0, 0, 0, 0, 137, 1, 0, 0, 0, 0, 141, 1, 0, 0, 0, 0, 145, 1, 0, 0,
    0, 0, 147, 1, 0, 0, 0, 0, 149, 1, 0, 0, 0, 1, 151, 1, 0, 0, 0, 3, 153, 1, 0,
    0, 0, 5, 155, 1, 0, 0, 0, 7, 157, 1, 0, 0, 0, 9, 159, 1, 0, 0, 0, 11, 165,
    1, 0, 0, 0, 13, 169, 1, 0, 0, 0, 15, 171, 1, 0, 0, 0, 17, 178, 1, 0, 0, 0,
    19, 184, 1, 0, 0, 0, 21, 191, 1, 0, 0, 0, 23, 198, 1, 0, 0, 0, 25, 207, 1,
    0, 0, 0, 27, 217, 1, 0, 0, 0, 29, 221, 1, 0, 0, 0, 31, 230, 1, 0, 0, 0, 33,
    237, 1, 0, 0, 0, 35, 240, 1, 0, 0, 0, 37, 245, 1, 0, 0, 0, 39, 249, 1, 0, 0,
    0, 41, 255, 1, 0, 0, 0, 43, 258, 1, 0, 0, 0, 45, 262, 1, 0, 0, 0, 47, 269,
    1, 0, 0, 0, 49, 277, 1, 0, 0, 0, 51, 284, 1, 0, 0, 0, 53, 291, 1, 0, 0, 0,
    55, 298, 1, 0, 0, 0, 57, 315, 1, 0, 0, 0, 59, 320, 1, 0, 0, 0, 61, 329, 1,
    0, 0, 0, 63, 331, 1, 0, 0, 0, 65, 333, 1, 0, 0, 0, 67, 335, 1, 0, 0, 0, 69,
    337, 1, 0, 0, 0, 71, 339, 1, 0, 0, 0, 73, 341, 1, 0, 0, 0, 75, 343, 1, 0, 0,
    0, 77, 345, 1, 0, 0, 0, 79, 374, 1, 0, 0, 0, 81, 380, 1, 0, 0, 0, 83, 388,
    1, 0, 0, 0, 85, 396, 1, 0, 0, 0, 87, 398, 1, 0, 0, 0, 89, 402, 1, 0, 0, 0,
    91, 404, 1, 0, 0, 0, 93, 406, 1, 0, 0, 0, 95, 409, 1, 0, 0, 0, 97, 411, 1,
    0, 0, 0, 99, 413, 1, 0, 0, 0, 101, 415, 1, 0, 0, 0, 103, 417, 1, 0, 0, 0,
    105, 419, 1, 0, 0, 0, 107, 421, 1, 0, 0, 0, 109, 424, 1, 0, 0, 0, 111, 427,
    1, 0, 0, 0, 113, 429, 1, 0, 0, 0, 115, 431, 1, 0, 0, 0, 117, 433, 1, 0, 0,
    0, 119, 436, 1, 0, 0, 0, 121, 439, 1, 0, 0, 0, 123, 441, 1, 0, 0, 0, 125,
    443, 1, 0, 0, 0, 127, 446, 1, 0, 0, 0, 129, 449, 1, 0, 0, 0, 131, 452, 1, 0,
    0, 0, 133, 455, 1, 0, 0, 0, 135, 463, 1, 0, 0, 0, 137, 466, 1, 0, 0, 0, 139,
    470, 1, 0, 0, 0, 141, 472, 1, 0, 0, 0, 143, 482, 1, 0, 0, 0, 145, 485, 1, 0,
    0, 0, 147, 499, 1, 0, 0, 0, 149, 516, 1, 0, 0, 0, 151, 152, 5, 46, 0, 0,
    152, 2, 1, 0, 0, 0, 153, 154, 5, 95, 0, 0, 154, 4, 1, 0, 0, 0, 155, 156, 5,
    63, 0, 0, 156, 6, 1, 0, 0, 0, 157, 158, 5, 58, 0, 0, 158, 8, 1, 0, 0, 0,
    159, 160, 3, 137, 68, 0, 160, 161, 5, 46, 0, 0, 161, 162, 3, 137, 68, 0,
    162, 163, 5, 46, 0, 0, 163, 164, 3, 137, 68, 0, 164, 10, 1, 0, 0, 0, 165,
    166, 3, 141, 70, 0, 166, 12, 1, 0, 0, 0, 167, 170, 3, 17, 8, 0, 168, 170, 3,
    19, 9, 0, 169, 167, 1, 0, 0, 0, 169, 168, 1, 0, 0, 0, 170, 14, 1, 0, 0, 0,
    171, 172, 5, 115, 0, 0, 172, 173, 5, 105, 0, 0, 173, 174, 5, 103, 0, 0, 174,
    175, 5, 110, 0, 0, 175, 176, 5, 97, 0, 0, 176, 177, 5, 108, 0, 0, 177, 16,
    1, 0, 0, 0, 178, 179, 5, 105, 0, 0, 179, 180, 5, 110, 0, 0, 180, 181, 5,
    112, 0, 0, 181, 182, 5, 117, 0, 0, 182, 183, 5, 116, 0, 0, 183, 18, 1, 0, 0,
    0, 184, 185, 5, 111, 0, 0, 185, 186, 5, 117, 0, 0, 186, 187, 5, 116, 0, 0,
    187, 188, 5, 112, 0, 0, 188, 189, 5, 117, 0, 0, 189, 190, 5, 116, 0, 0, 190,
    20, 1, 0, 0, 0, 191, 192, 5, 112, 0, 0, 192, 193, 5, 117, 0, 0, 193, 194, 5,
    98, 0, 0, 194, 195, 5, 108, 0, 0, 195, 196, 5, 105, 0, 0, 196, 197, 5, 99,
    0, 0, 197, 22, 1, 0, 0, 0, 198, 199, 5, 116, 0, 0, 199, 200, 5, 101, 0, 0,
    200, 201, 5, 109, 0, 0, 201, 202, 5, 112, 0, 0, 202, 203, 5, 108, 0, 0, 203,
    204, 5, 97, 0, 0, 204, 205, 5, 116, 0, 0, 205, 206, 5, 101, 0, 0, 206, 24,
    1, 0, 0, 0, 207, 208, 5, 99, 0, 0, 208, 209, 5, 111, 0, 0, 209, 210, 5, 109,
    0, 0, 210, 211, 5, 112, 0, 0, 211, 212, 5, 111, 0, 0, 212, 213, 5, 110, 0,
    0, 213, 214, 5, 101, 0, 0, 214, 215, 5, 110, 0, 0, 215, 216, 5, 116, 0, 0,
    216, 26, 1, 0, 0, 0, 217, 218, 5, 118, 0, 0, 218, 219, 5, 97, 0, 0, 219,
    220, 5, 114, 0, 0, 220, 28, 1, 0, 0, 0, 221, 222, 5, 102, 0, 0, 222, 223, 5,
    117, 0, 0, 223, 224, 5, 110, 0, 0, 224, 225, 5, 99, 0, 0, 225, 226, 5, 116,
    0, 0, 226, 227, 5, 105, 0, 0, 227, 228, 5, 111, 0, 0, 228, 229, 5, 110, 0,
    0, 229, 30, 1, 0, 0, 0, 230, 231, 5, 114, 0, 0, 231, 232, 5, 101, 0, 0, 232,
    233, 5, 116, 0, 0, 233, 234, 5, 117, 0, 0, 234, 235, 5, 114, 0, 0, 235, 236,
    5, 110, 0, 0, 236, 32, 1, 0, 0, 0, 237, 238, 5, 105, 0, 0, 238, 239, 5, 102,
    0, 0, 239, 34, 1, 0, 0, 0, 240, 241, 5, 101, 0, 0, 241, 242, 5, 108, 0, 0,
    242, 243, 5, 115, 0, 0, 243, 244, 5, 101, 0, 0, 244, 36, 1, 0, 0, 0, 245,
    246, 5, 102, 0, 0, 246, 247, 5, 111, 0, 0, 247, 248, 5, 114, 0, 0, 248, 38,
    1, 0, 0, 0, 249, 250, 5, 119, 0, 0, 250, 251, 5, 104, 0, 0, 251, 252, 5,
    105, 0, 0, 252, 253, 5, 108, 0, 0, 253, 254, 5, 101, 0, 0, 254, 40, 1, 0, 0,
    0, 255, 256, 5, 100, 0, 0, 256, 257, 5, 111, 0, 0, 257, 42, 1, 0, 0, 0, 258,
    259, 5, 108, 0, 0, 259, 260, 5, 111, 0, 0, 260, 261, 5, 103, 0, 0, 261, 44,
    1, 0, 0, 0, 262, 263, 5, 97, 0, 0, 263, 264, 5, 115, 0, 0, 264, 265, 5, 115,
    0, 0, 265, 266, 5, 101, 0, 0, 266, 267, 5, 114, 0, 0, 267, 268, 5, 116, 0,
    0, 268, 46, 1, 0, 0, 0, 269, 270, 5, 105, 0, 0, 270, 271, 5, 110, 0, 0, 271,
    272, 5, 99, 0, 0, 272, 273, 5, 108, 0, 0, 273, 274, 5, 117, 0, 0, 274, 275,
    5, 100, 0, 0, 275, 276, 5, 101, 0, 0, 276, 48, 1, 0, 0, 0, 277, 278, 5, 99,
    0, 0, 278, 279, 5, 117, 0, 0, 279, 280, 5, 115, 0, 0, 280, 281, 5, 116, 0,
    0, 281, 282, 5, 111, 0, 0, 282, 283, 5, 109, 0, 0, 283, 50, 1, 0, 0, 0, 284,
    285, 5, 112, 0, 0, 285, 286, 5, 114, 0, 0, 286, 287, 5, 97, 0, 0, 287, 288,
    5, 103, 0, 0, 288, 289, 5, 109, 0, 0, 289, 290, 5, 97, 0, 0, 290, 52, 1, 0,
    0, 0, 291, 292, 5, 99, 0, 0, 292, 293, 5, 105, 0, 0, 293, 294, 5, 114, 0, 0,
    294, 295, 5, 99, 0, 0, 295, 296, 5, 111, 0, 0, 296, 297, 5, 109, 0, 0, 297,
    54, 1, 0, 0, 0, 298, 299, 5, 99, 0, 0, 299, 300, 5, 117, 0, 0, 300, 301, 5,
    115, 0, 0, 301, 302, 5, 116, 0, 0, 302, 303, 5, 111, 0, 0, 303, 304, 5, 109,
    0, 0, 304, 305, 5, 95, 0, 0, 305, 306, 5, 116, 0, 0, 306, 307, 5, 101, 0, 0,
    307, 308, 5, 109, 0, 0, 308, 309, 5, 112, 0, 0, 309, 310, 5, 108, 0, 0, 310,
    311, 5, 97, 0, 0, 311, 312, 5, 116, 0, 0, 312, 313, 5, 101, 0, 0, 313, 314,
    5, 115, 0, 0, 314, 56, 1, 0, 0, 0, 315, 316, 5, 109, 0, 0, 316, 317, 5, 97,
    0, 0, 317, 318, 5, 105, 0, 0, 318, 319, 5, 110, 0, 0, 319, 58, 1, 0, 0, 0,
    320, 321, 5, 112, 0, 0, 321, 322, 5, 97, 0, 0, 322, 323, 5, 114, 0, 0, 323,
    324, 5, 97, 0, 0, 324, 325, 5, 108, 0, 0, 325, 326, 5, 108, 0, 0, 326, 327,
    5, 101, 0, 0, 327, 328, 5, 108, 0, 0, 328, 60, 1, 0, 0, 0, 329, 330, 5, 40,
    0, 0, 330, 62, 1, 0, 0, 0, 331, 332, 5, 41, 0, 0, 332, 64, 1, 0, 0, 0, 333,
    334, 5, 91, 0, 0, 334, 66, 1, 0, 0, 0, 335, 336, 5, 93, 0, 0, 336, 68, 1, 0,
    0, 0, 337, 338, 5, 123, 0, 0, 338, 70, 1, 0, 0, 0, 339, 340, 5, 125, 0, 0,
    340, 72, 1, 0, 0, 0, 341, 342, 5, 59, 0, 0, 342, 74, 1, 0, 0, 0, 343, 344,
    5, 44, 0, 0, 344, 76, 1, 0, 0, 0, 345, 346, 5, 61, 0, 0, 346, 78, 1, 0, 0,
    0, 347, 348, 5, 43, 0, 0, 348, 375, 5, 61, 0, 0, 349, 350, 5, 45, 0, 0, 350,
    375, 5, 61, 0, 0, 351, 352, 5, 42, 0, 0, 352, 375, 5, 61, 0, 0, 353, 354, 5,
    42, 0, 0, 354, 355, 5, 42, 0, 0, 355, 375, 5, 61, 0, 0, 356, 357, 5, 47, 0,
    0, 357, 375, 5, 61, 0, 0, 358, 359, 5, 92, 0, 0, 359, 375, 5, 61, 0, 0, 360,
    361, 5, 37, 0, 0, 361, 375, 5, 61, 0, 0, 362, 363, 5, 60, 0, 0, 363, 364, 5,
    60, 0, 0, 364, 375, 5, 61, 0, 0, 365, 366, 5, 62, 0, 0, 366, 367, 5, 62, 0,
    0, 367, 375, 5, 61, 0, 0, 368, 369, 5, 38, 0, 0, 369, 375, 5, 61, 0, 0, 370,
    371, 5, 94, 0, 0, 371, 375, 5, 61, 0, 0, 372, 373, 5, 124, 0, 0, 373, 375,
    5, 61, 0, 0, 374, 347, 1, 0, 0, 0, 374, 349, 1, 0, 0, 0, 374, 351, 1, 0, 0,
    0, 374, 353, 1, 0, 0, 0, 374, 356, 1, 0, 0, 0, 374, 358, 1, 0, 0, 0, 374,
    360, 1, 0, 0, 0, 374, 362, 1, 0, 0, 0, 374, 365, 1, 0, 0, 0, 374, 368, 1, 0,
    0, 0, 374, 370, 1, 0, 0, 0, 374, 372, 1, 0, 0, 0, 375, 80, 1, 0, 0, 0, 376,
    377, 5, 43, 0, 0, 377, 381, 5, 43, 0, 0, 378, 379, 5, 45, 0, 0, 379, 381, 5,
    45, 0, 0, 380, 376, 1, 0, 0, 0, 380, 378, 1, 0, 0, 0, 381, 82, 1, 0, 0, 0,
    382, 383, 5, 60, 0, 0, 383, 384, 5, 45, 0, 0, 384, 389, 5, 45, 0, 0, 385,
    386, 5, 60, 0, 0, 386, 387, 5, 61, 0, 0, 387, 389, 5, 61, 0, 0, 388, 382, 1,
    0, 0, 0, 388, 385, 1, 0, 0, 0, 389, 84, 1, 0, 0, 0, 390, 391, 5, 45, 0, 0,
    391, 392, 5, 45, 0, 0, 392, 397, 5, 62, 0, 0, 393, 394, 5, 61, 0, 0, 394,
    395, 5, 61, 0, 0, 395, 397, 5, 62, 0, 0, 396, 390, 1, 0, 0, 0, 396, 393, 1,
    0, 0, 0, 397, 86, 1, 0, 0, 0, 398, 399, 5, 61, 0, 0, 399, 400, 5, 61, 0, 0,
    400, 401, 5, 61, 0, 0, 401, 88, 1, 0, 0, 0, 402, 403, 5, 33, 0, 0, 403, 90,
    1, 0, 0, 0, 404, 405, 5, 126, 0, 0, 405, 92, 1, 0, 0, 0, 406, 407, 5, 42, 0,
    0, 407, 408, 5, 42, 0, 0, 408, 94, 1, 0, 0, 0, 409, 410, 5, 42, 0, 0, 410,
    96, 1, 0, 0, 0, 411, 412, 5, 47, 0, 0, 412, 98, 1, 0, 0, 0, 413, 414, 5, 92,
    0, 0, 414, 100, 1, 0, 0, 0, 415, 416, 5, 37, 0, 0, 416, 102, 1, 0, 0, 0,
    417, 418, 5, 43, 0, 0, 418, 104, 1, 0, 0, 0, 419, 420, 5, 45, 0, 0, 420,
    106, 1, 0, 0, 0, 421, 422, 5, 60, 0, 0, 422, 423, 5, 60, 0, 0, 423, 108, 1,
    0, 0, 0, 424, 425, 5, 62, 0, 0, 425, 426, 5, 62, 0, 0, 426, 110, 1, 0, 0, 0,
    427, 428, 5, 38, 0, 0, 428, 112, 1, 0, 0, 0, 429, 430, 5, 94, 0, 0, 430,
    114, 1, 0, 0, 0, 431, 432, 5, 124, 0, 0, 432, 116, 1, 0, 0, 0, 433, 434, 5,
    61, 0, 0, 434, 435, 5, 61, 0, 0, 435, 118, 1, 0, 0, 0, 436, 437, 5, 33, 0,
    0, 437, 438, 5, 61, 0, 0, 438, 120, 1, 0, 0, 0, 439, 440, 5, 62, 0, 0, 440,
    122, 1, 0, 0, 0, 441, 442, 5, 60, 0, 0, 442, 124, 1, 0, 0, 0, 443, 444, 5,
    62, 0, 0, 444, 445, 5, 61, 0, 0, 445, 126, 1, 0, 0, 0, 446, 447, 5, 60, 0,
    0, 447, 448, 5, 61, 0, 0, 448, 128, 1, 0, 0, 0, 449, 450, 5, 38, 0, 0, 450,
    451, 5, 38, 0, 0, 451, 130, 1, 0, 0, 0, 452, 453, 5, 124, 0, 0, 453, 454, 5,
    124, 0, 0, 454, 132, 1, 0, 0, 0, 455, 460, 3, 135, 67, 0, 456, 459, 3, 135,
    67, 0, 457, 459, 3, 139, 69, 0, 458, 456, 1, 0, 0, 0, 458, 457, 1, 0, 0, 0,
    459, 462, 1, 0, 0, 0, 460, 458, 1, 0, 0, 0, 460, 461, 1, 0, 0, 0, 461, 134,
    1, 0, 0, 0, 462, 460, 1, 0, 0, 0, 463, 464, 7, 0, 0, 0, 464, 136, 1, 0, 0,
    0, 465, 467, 3, 139, 69, 0, 466, 465, 1, 0, 0, 0, 467, 468, 1, 0, 0, 0, 468,
    466, 1, 0, 0, 0, 468, 469, 1, 0, 0, 0, 469, 138, 1, 0, 0, 0, 470, 471, 7, 1,
    0, 0, 471, 140, 1, 0, 0, 0, 472, 477, 5, 34, 0, 0, 473, 476, 3, 143, 71, 0,
    474, 476, 9, 0, 0, 0, 475, 473, 1, 0, 0, 0, 475, 474, 1, 0, 0, 0, 476, 479,
    1, 0, 0, 0, 477, 478, 1, 0, 0, 0, 477, 475, 1, 0, 0, 0, 478, 480, 1, 0, 0,
    0, 479, 477, 1, 0, 0, 0, 480, 481, 5, 34, 0, 0, 481, 142, 1, 0, 0, 0, 482,
    483, 5, 92, 0, 0, 483, 484, 7, 2, 0, 0, 484, 144, 1, 0, 0, 0, 485, 486, 5,
    47, 0, 0, 486, 487, 5, 42, 0, 0, 487, 491, 1, 0, 0, 0, 488, 490, 9, 0, 0, 0,
    489, 488, 1, 0, 0, 0, 490, 493, 1, 0, 0, 0, 491, 492, 1, 0, 0, 0, 491, 489,
    1, 0, 0, 0, 492, 494, 1, 0, 0, 0, 493, 491, 1, 0, 0, 0, 494, 495, 5, 42, 0,
    0, 495, 496, 5, 47, 0, 0, 496, 497, 1, 0, 0, 0, 497, 498, 6, 72, 0, 0, 498,
    146, 1, 0, 0, 0, 499, 500, 5, 47, 0, 0, 500, 501, 5, 47, 0, 0, 501, 505, 1,
    0, 0, 0, 502, 504, 8, 3, 0, 0, 503, 502, 1, 0, 0, 0, 504, 507, 1, 0, 0, 0,
    505, 503, 1, 0, 0, 0, 505, 506, 1, 0, 0, 0, 506, 509, 1, 0, 0, 0, 507, 505,
    1, 0, 0, 0, 508, 510, 5, 13, 0, 0, 509, 508, 1, 0, 0, 0, 509, 510, 1, 0, 0,
    0, 510, 511, 1, 0, 0, 0, 511, 512, 5, 10, 0, 0, 512, 513, 1, 0, 0, 0, 513,
    514, 6, 73, 0, 0, 514, 148, 1, 0, 0, 0, 515, 517, 7, 4, 0, 0, 516, 515, 1,
    0, 0, 0, 517, 518, 1, 0, 0, 0, 518, 516, 1, 0, 0, 0, 518, 519, 1, 0, 0, 0,
    519, 520, 1, 0, 0, 0, 520, 521, 6, 74, 0, 0, 521, 150, 1, 0, 0, 0, 15, 0,
    169, 374, 380, 388, 396, 458, 460, 468, 475, 477, 491, 505, 509, 518, 1, 0,
    1, 0,
  ];

  private static __ATN: ATN;
  public static get _ATN(): ATN {
    if (!CircomLexer.__ATN) {
      CircomLexer.__ATN = new ATNDeserializer().deserialize(
        CircomLexer._serializedATN,
      );
    }

    return CircomLexer.__ATN;
  }

  static DecisionsToDFA = CircomLexer._ATN.decisionToState.map(
    (ds: DecisionState, index: number) => new DFA(ds, index),
  );
}
