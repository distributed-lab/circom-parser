// Generated from parser/LexerCircom.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
  ATN,
  ATNDeserializer,
  CharStream,
  DecisionState,
  DFA,
  Lexer,
  LexerATNSimulator,
  RuleContext,
  PredictionContextCache,
  Token,
} from "antlr4";
export default class LexerCircom extends Lexer {
  public static readonly VERSION = 1;
  public static readonly PACKAGE_NAME = 2;
  public static readonly SIGNAL_TYPE = 3;
  public static readonly SIGNAL = 4;
  public static readonly INPUT = 5;
  public static readonly OUTPUT = 6;
  public static readonly PUBLIC = 7;
  public static readonly TEMPLATE = 8;
  public static readonly COMPONENT = 9;
  public static readonly VAR = 10;
  public static readonly FUNCTION = 11;
  public static readonly RETURN = 12;
  public static readonly IF = 13;
  public static readonly ELSE = 14;
  public static readonly FOR = 15;
  public static readonly WHILE = 16;
  public static readonly DO = 17;
  public static readonly LOG = 18;
  public static readonly ASSERT = 19;
  public static readonly INCLUDE = 20;
  public static readonly CUSTOM = 21;
  public static readonly PRAGMA = 22;
  public static readonly CIRCOM = 23;
  public static readonly CUSTOM_TEMPLATES = 24;
  public static readonly MAIN = 25;
  public static readonly PARALLEL = 26;
  public static readonly LP = 27;
  public static readonly RP = 28;
  public static readonly LB = 29;
  public static readonly RB = 30;
  public static readonly LC = 31;
  public static readonly RC = 32;
  public static readonly SEMICOLON = 33;
  public static readonly COMMA = 34;
  public static readonly ASSIGNMENT = 35;
  public static readonly ASSIGMENT_OP = 36;
  public static readonly SELF_OP = 37;
  public static readonly LEFT_ASSIGNMENT = 38;
  public static readonly RIGHT_ASSIGNMENT = 39;
  public static readonly CONSTRAINT_EQ = 40;
  public static readonly ID = 41;
  public static readonly NUMBER = 42;
  public static readonly STRING = 43;
  public static readonly COMMENT = 44;
  public static readonly LINE_COMMENT = 45;
  public static readonly WS = 46;
  public static readonly EOF = Token.EOF;

  public static readonly channelNames: string[] = [
    "DEFAULT_TOKEN_CHANNEL",
    "HIDDEN",
  ];
  public static readonly literalNames: (string | null)[] = [
    null,
    null,
    null,
    null,
    "'signal'",
    "'input'",
    "'output'",
    "'public'",
    "'template'",
    "'component'",
    "'var'",
    "'function'",
    "'return'",
    "'if'",
    "'else'",
    "'for'",
    "'while'",
    "'do'",
    "'log'",
    "'assert'",
    "'include'",
    "'custom'",
    "'pragma'",
    "'circom'",
    "'custom_templates'",
    "'main'",
    "'parallel'",
    "'('",
    "')'",
    "'['",
    "']'",
    "'{'",
    "'}'",
    "';'",
    "','",
    "'='",
    null,
    null,
    null,
    null,
    "'==='",
  ];
  public static readonly symbolicNames: (string | null)[] = [
    null,
    "VERSION",
    "PACKAGE_NAME",
    "SIGNAL_TYPE",
    "SIGNAL",
    "INPUT",
    "OUTPUT",
    "PUBLIC",
    "TEMPLATE",
    "COMPONENT",
    "VAR",
    "FUNCTION",
    "RETURN",
    "IF",
    "ELSE",
    "FOR",
    "WHILE",
    "DO",
    "LOG",
    "ASSERT",
    "INCLUDE",
    "CUSTOM",
    "PRAGMA",
    "CIRCOM",
    "CUSTOM_TEMPLATES",
    "MAIN",
    "PARALLEL",
    "LP",
    "RP",
    "LB",
    "RB",
    "LC",
    "RC",
    "SEMICOLON",
    "COMMA",
    "ASSIGNMENT",
    "ASSIGMENT_OP",
    "SELF_OP",
    "LEFT_ASSIGNMENT",
    "RIGHT_ASSIGNMENT",
    "CONSTRAINT_EQ",
    "ID",
    "NUMBER",
    "STRING",
    "COMMENT",
    "LINE_COMMENT",
    "WS",
  ];
  public static readonly modeNames: string[] = ["DEFAULT_MODE"];

  public static readonly ruleNames: string[] = [
    "VERSION",
    "PACKAGE_NAME",
    "SIGNAL_TYPE",
    "SIGNAL",
    "INPUT",
    "OUTPUT",
    "PUBLIC",
    "TEMPLATE",
    "COMPONENT",
    "VAR",
    "FUNCTION",
    "RETURN",
    "IF",
    "ELSE",
    "FOR",
    "WHILE",
    "DO",
    "LOG",
    "ASSERT",
    "INCLUDE",
    "CUSTOM",
    "PRAGMA",
    "CIRCOM",
    "CUSTOM_TEMPLATES",
    "MAIN",
    "PARALLEL",
    "LP",
    "RP",
    "LB",
    "RB",
    "LC",
    "RC",
    "SEMICOLON",
    "COMMA",
    "ASSIGNMENT",
    "ASSIGMENT_OP",
    "SELF_OP",
    "LEFT_ASSIGNMENT",
    "RIGHT_ASSIGNMENT",
    "CONSTRAINT_EQ",
    "ID",
    "LETTER",
    "NUMBER",
    "DIGIT",
    "STRING",
    "ESC",
    "COMMENT",
    "LINE_COMMENT",
    "WS",
  ];

  constructor(input: CharStream) {
    super(input);
    this._interp = new LexerATNSimulator(
      this,
      LexerCircom._ATN,
      LexerCircom.DecisionsToDFA,
      new PredictionContextCache(),
    );
  }

  public get grammarFileName(): string {
    return "LexerCircom.g4";
  }

  public get literalNames(): (string | null)[] {
    return LexerCircom.literalNames;
  }
  public get symbolicNames(): (string | null)[] {
    return LexerCircom.symbolicNames;
  }
  public get ruleNames(): string[] {
    return LexerCircom.ruleNames;
  }

  public get serializedATN(): number[] {
    return LexerCircom._serializedATN;
  }

  public get channelNames(): string[] {
    return LexerCircom.channelNames;
  }

  public get modeNames(): string[] {
    return LexerCircom.modeNames;
  }

  public static readonly _serializedATN: number[] = [
    4, 0, 46, 409, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4,
    7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7,
    10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2,
    16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21, 7,
    21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2,
    27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7,
    32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2,
    38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7,
    43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 1,
    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 3, 2, 110, 8, 2, 1,
    3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4,
    1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1,
    6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8,
    1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1,
    10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1,
    11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1,
    13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1,
    15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1,
    18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1,
    19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1,
    21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1,
    23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1,
    23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1,
    25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1,
    27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1,
    32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1,
    35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1,
    35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 3, 35,
    315, 8, 35, 1, 36, 1, 36, 1, 36, 1, 36, 3, 36, 321, 8, 36, 1, 37, 1, 37, 1,
    37, 1, 37, 1, 37, 1, 37, 3, 37, 329, 8, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1,
    38, 1, 38, 3, 38, 337, 8, 38, 1, 39, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1,
    40, 5, 40, 346, 8, 40, 10, 40, 12, 40, 349, 9, 40, 1, 41, 1, 41, 1, 42, 4,
    42, 354, 8, 42, 11, 42, 12, 42, 355, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 5,
    44, 363, 8, 44, 10, 44, 12, 44, 366, 9, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1,
    45, 1, 46, 1, 46, 1, 46, 1, 46, 5, 46, 377, 8, 46, 10, 46, 12, 46, 380, 9,
    46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 47, 5, 47,
    391, 8, 47, 10, 47, 12, 47, 394, 9, 47, 1, 47, 3, 47, 397, 8, 47, 1, 47, 1,
    47, 1, 47, 1, 47, 1, 48, 4, 48, 404, 8, 48, 11, 48, 12, 48, 405, 1, 48, 1,
    48, 2, 364, 378, 0, 49, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8,
    17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35,
    18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27,
    55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73,
    37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 0, 85, 42, 87, 0, 89, 43, 91, 0, 93,
    44, 95, 45, 97, 46, 1, 0, 5, 5, 0, 36, 36, 65, 90, 95, 95, 97, 122, 128,
    255, 1, 0, 48, 57, 7, 0, 34, 34, 92, 92, 98, 98, 102, 102, 110, 110, 114,
    114, 116, 116, 2, 0, 10, 10, 13, 13, 3, 0, 9, 10, 12, 13, 32, 32, 429, 0, 1,
    1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1,
    0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1,
    0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1,
    0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1,
    0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1,
    0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1,
    0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1,
    0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1,
    0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1,
    0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1,
    0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1,
    0, 0, 0, 0, 97, 1, 0, 0, 0, 1, 99, 1, 0, 0, 0, 3, 105, 1, 0, 0, 0, 5, 109,
    1, 0, 0, 0, 7, 111, 1, 0, 0, 0, 9, 118, 1, 0, 0, 0, 11, 124, 1, 0, 0, 0, 13,
    131, 1, 0, 0, 0, 15, 138, 1, 0, 0, 0, 17, 147, 1, 0, 0, 0, 19, 157, 1, 0, 0,
    0, 21, 161, 1, 0, 0, 0, 23, 170, 1, 0, 0, 0, 25, 177, 1, 0, 0, 0, 27, 180,
    1, 0, 0, 0, 29, 185, 1, 0, 0, 0, 31, 189, 1, 0, 0, 0, 33, 195, 1, 0, 0, 0,
    35, 198, 1, 0, 0, 0, 37, 202, 1, 0, 0, 0, 39, 209, 1, 0, 0, 0, 41, 217, 1,
    0, 0, 0, 43, 224, 1, 0, 0, 0, 45, 231, 1, 0, 0, 0, 47, 238, 1, 0, 0, 0, 49,
    255, 1, 0, 0, 0, 51, 260, 1, 0, 0, 0, 53, 269, 1, 0, 0, 0, 55, 271, 1, 0, 0,
    0, 57, 273, 1, 0, 0, 0, 59, 275, 1, 0, 0, 0, 61, 277, 1, 0, 0, 0, 63, 279,
    1, 0, 0, 0, 65, 281, 1, 0, 0, 0, 67, 283, 1, 0, 0, 0, 69, 285, 1, 0, 0, 0,
    71, 314, 1, 0, 0, 0, 73, 320, 1, 0, 0, 0, 75, 328, 1, 0, 0, 0, 77, 336, 1,
    0, 0, 0, 79, 338, 1, 0, 0, 0, 81, 342, 1, 0, 0, 0, 83, 350, 1, 0, 0, 0, 85,
    353, 1, 0, 0, 0, 87, 357, 1, 0, 0, 0, 89, 359, 1, 0, 0, 0, 91, 369, 1, 0, 0,
    0, 93, 372, 1, 0, 0, 0, 95, 386, 1, 0, 0, 0, 97, 403, 1, 0, 0, 0, 99, 100,
    3, 85, 42, 0, 100, 101, 5, 46, 0, 0, 101, 102, 3, 85, 42, 0, 102, 103, 5,
    46, 0, 0, 103, 104, 3, 85, 42, 0, 104, 2, 1, 0, 0, 0, 105, 106, 3, 89, 44,
    0, 106, 4, 1, 0, 0, 0, 107, 110, 3, 9, 4, 0, 108, 110, 3, 11, 5, 0, 109,
    107, 1, 0, 0, 0, 109, 108, 1, 0, 0, 0, 110, 6, 1, 0, 0, 0, 111, 112, 5, 115,
    0, 0, 112, 113, 5, 105, 0, 0, 113, 114, 5, 103, 0, 0, 114, 115, 5, 110, 0,
    0, 115, 116, 5, 97, 0, 0, 116, 117, 5, 108, 0, 0, 117, 8, 1, 0, 0, 0, 118,
    119, 5, 105, 0, 0, 119, 120, 5, 110, 0, 0, 120, 121, 5, 112, 0, 0, 121, 122,
    5, 117, 0, 0, 122, 123, 5, 116, 0, 0, 123, 10, 1, 0, 0, 0, 124, 125, 5, 111,
    0, 0, 125, 126, 5, 117, 0, 0, 126, 127, 5, 116, 0, 0, 127, 128, 5, 112, 0,
    0, 128, 129, 5, 117, 0, 0, 129, 130, 5, 116, 0, 0, 130, 12, 1, 0, 0, 0, 131,
    132, 5, 112, 0, 0, 132, 133, 5, 117, 0, 0, 133, 134, 5, 98, 0, 0, 134, 135,
    5, 108, 0, 0, 135, 136, 5, 105, 0, 0, 136, 137, 5, 99, 0, 0, 137, 14, 1, 0,
    0, 0, 138, 139, 5, 116, 0, 0, 139, 140, 5, 101, 0, 0, 140, 141, 5, 109, 0,
    0, 141, 142, 5, 112, 0, 0, 142, 143, 5, 108, 0, 0, 143, 144, 5, 97, 0, 0,
    144, 145, 5, 116, 0, 0, 145, 146, 5, 101, 0, 0, 146, 16, 1, 0, 0, 0, 147,
    148, 5, 99, 0, 0, 148, 149, 5, 111, 0, 0, 149, 150, 5, 109, 0, 0, 150, 151,
    5, 112, 0, 0, 151, 152, 5, 111, 0, 0, 152, 153, 5, 110, 0, 0, 153, 154, 5,
    101, 0, 0, 154, 155, 5, 110, 0, 0, 155, 156, 5, 116, 0, 0, 156, 18, 1, 0, 0,
    0, 157, 158, 5, 118, 0, 0, 158, 159, 5, 97, 0, 0, 159, 160, 5, 114, 0, 0,
    160, 20, 1, 0, 0, 0, 161, 162, 5, 102, 0, 0, 162, 163, 5, 117, 0, 0, 163,
    164, 5, 110, 0, 0, 164, 165, 5, 99, 0, 0, 165, 166, 5, 116, 0, 0, 166, 167,
    5, 105, 0, 0, 167, 168, 5, 111, 0, 0, 168, 169, 5, 110, 0, 0, 169, 22, 1, 0,
    0, 0, 170, 171, 5, 114, 0, 0, 171, 172, 5, 101, 0, 0, 172, 173, 5, 116, 0,
    0, 173, 174, 5, 117, 0, 0, 174, 175, 5, 114, 0, 0, 175, 176, 5, 110, 0, 0,
    176, 24, 1, 0, 0, 0, 177, 178, 5, 105, 0, 0, 178, 179, 5, 102, 0, 0, 179,
    26, 1, 0, 0, 0, 180, 181, 5, 101, 0, 0, 181, 182, 5, 108, 0, 0, 182, 183, 5,
    115, 0, 0, 183, 184, 5, 101, 0, 0, 184, 28, 1, 0, 0, 0, 185, 186, 5, 102, 0,
    0, 186, 187, 5, 111, 0, 0, 187, 188, 5, 114, 0, 0, 188, 30, 1, 0, 0, 0, 189,
    190, 5, 119, 0, 0, 190, 191, 5, 104, 0, 0, 191, 192, 5, 105, 0, 0, 192, 193,
    5, 108, 0, 0, 193, 194, 5, 101, 0, 0, 194, 32, 1, 0, 0, 0, 195, 196, 5, 100,
    0, 0, 196, 197, 5, 111, 0, 0, 197, 34, 1, 0, 0, 0, 198, 199, 5, 108, 0, 0,
    199, 200, 5, 111, 0, 0, 200, 201, 5, 103, 0, 0, 201, 36, 1, 0, 0, 0, 202,
    203, 5, 97, 0, 0, 203, 204, 5, 115, 0, 0, 204, 205, 5, 115, 0, 0, 205, 206,
    5, 101, 0, 0, 206, 207, 5, 114, 0, 0, 207, 208, 5, 116, 0, 0, 208, 38, 1, 0,
    0, 0, 209, 210, 5, 105, 0, 0, 210, 211, 5, 110, 0, 0, 211, 212, 5, 99, 0, 0,
    212, 213, 5, 108, 0, 0, 213, 214, 5, 117, 0, 0, 214, 215, 5, 100, 0, 0, 215,
    216, 5, 101, 0, 0, 216, 40, 1, 0, 0, 0, 217, 218, 5, 99, 0, 0, 218, 219, 5,
    117, 0, 0, 219, 220, 5, 115, 0, 0, 220, 221, 5, 116, 0, 0, 221, 222, 5, 111,
    0, 0, 222, 223, 5, 109, 0, 0, 223, 42, 1, 0, 0, 0, 224, 225, 5, 112, 0, 0,
    225, 226, 5, 114, 0, 0, 226, 227, 5, 97, 0, 0, 227, 228, 5, 103, 0, 0, 228,
    229, 5, 109, 0, 0, 229, 230, 5, 97, 0, 0, 230, 44, 1, 0, 0, 0, 231, 232, 5,
    99, 0, 0, 232, 233, 5, 105, 0, 0, 233, 234, 5, 114, 0, 0, 234, 235, 5, 99,
    0, 0, 235, 236, 5, 111, 0, 0, 236, 237, 5, 109, 0, 0, 237, 46, 1, 0, 0, 0,
    238, 239, 5, 99, 0, 0, 239, 240, 5, 117, 0, 0, 240, 241, 5, 115, 0, 0, 241,
    242, 5, 116, 0, 0, 242, 243, 5, 111, 0, 0, 243, 244, 5, 109, 0, 0, 244, 245,
    5, 95, 0, 0, 245, 246, 5, 116, 0, 0, 246, 247, 5, 101, 0, 0, 247, 248, 5,
    109, 0, 0, 248, 249, 5, 112, 0, 0, 249, 250, 5, 108, 0, 0, 250, 251, 5, 97,
    0, 0, 251, 252, 5, 116, 0, 0, 252, 253, 5, 101, 0, 0, 253, 254, 5, 115, 0,
    0, 254, 48, 1, 0, 0, 0, 255, 256, 5, 109, 0, 0, 256, 257, 5, 97, 0, 0, 257,
    258, 5, 105, 0, 0, 258, 259, 5, 110, 0, 0, 259, 50, 1, 0, 0, 0, 260, 261, 5,
    112, 0, 0, 261, 262, 5, 97, 0, 0, 262, 263, 5, 114, 0, 0, 263, 264, 5, 97,
    0, 0, 264, 265, 5, 108, 0, 0, 265, 266, 5, 108, 0, 0, 266, 267, 5, 101, 0,
    0, 267, 268, 5, 108, 0, 0, 268, 52, 1, 0, 0, 0, 269, 270, 5, 40, 0, 0, 270,
    54, 1, 0, 0, 0, 271, 272, 5, 41, 0, 0, 272, 56, 1, 0, 0, 0, 273, 274, 5, 91,
    0, 0, 274, 58, 1, 0, 0, 0, 275, 276, 5, 93, 0, 0, 276, 60, 1, 0, 0, 0, 277,
    278, 5, 123, 0, 0, 278, 62, 1, 0, 0, 0, 279, 280, 5, 125, 0, 0, 280, 64, 1,
    0, 0, 0, 281, 282, 5, 59, 0, 0, 282, 66, 1, 0, 0, 0, 283, 284, 5, 44, 0, 0,
    284, 68, 1, 0, 0, 0, 285, 286, 5, 61, 0, 0, 286, 70, 1, 0, 0, 0, 287, 288,
    5, 43, 0, 0, 288, 315, 5, 61, 0, 0, 289, 290, 5, 45, 0, 0, 290, 315, 5, 61,
    0, 0, 291, 292, 5, 42, 0, 0, 292, 315, 5, 61, 0, 0, 293, 294, 5, 42, 0, 0,
    294, 295, 5, 42, 0, 0, 295, 315, 5, 61, 0, 0, 296, 297, 5, 47, 0, 0, 297,
    315, 5, 61, 0, 0, 298, 299, 5, 92, 0, 0, 299, 315, 5, 61, 0, 0, 300, 301, 5,
    37, 0, 0, 301, 315, 5, 61, 0, 0, 302, 303, 5, 60, 0, 0, 303, 304, 5, 60, 0,
    0, 304, 315, 5, 61, 0, 0, 305, 306, 5, 62, 0, 0, 306, 307, 5, 62, 0, 0, 307,
    315, 5, 61, 0, 0, 308, 309, 5, 38, 0, 0, 309, 315, 5, 61, 0, 0, 310, 311, 5,
    94, 0, 0, 311, 315, 5, 61, 0, 0, 312, 313, 5, 124, 0, 0, 313, 315, 5, 61, 0,
    0, 314, 287, 1, 0, 0, 0, 314, 289, 1, 0, 0, 0, 314, 291, 1, 0, 0, 0, 314,
    293, 1, 0, 0, 0, 314, 296, 1, 0, 0, 0, 314, 298, 1, 0, 0, 0, 314, 300, 1, 0,
    0, 0, 314, 302, 1, 0, 0, 0, 314, 305, 1, 0, 0, 0, 314, 308, 1, 0, 0, 0, 314,
    310, 1, 0, 0, 0, 314, 312, 1, 0, 0, 0, 315, 72, 1, 0, 0, 0, 316, 317, 5, 43,
    0, 0, 317, 321, 5, 43, 0, 0, 318, 319, 5, 45, 0, 0, 319, 321, 5, 45, 0, 0,
    320, 316, 1, 0, 0, 0, 320, 318, 1, 0, 0, 0, 321, 74, 1, 0, 0, 0, 322, 323,
    5, 60, 0, 0, 323, 324, 5, 45, 0, 0, 324, 329, 5, 45, 0, 0, 325, 326, 5, 60,
    0, 0, 326, 327, 5, 61, 0, 0, 327, 329, 5, 61, 0, 0, 328, 322, 1, 0, 0, 0,
    328, 325, 1, 0, 0, 0, 329, 76, 1, 0, 0, 0, 330, 331, 5, 45, 0, 0, 331, 332,
    5, 45, 0, 0, 332, 337, 5, 62, 0, 0, 333, 334, 5, 61, 0, 0, 334, 335, 5, 61,
    0, 0, 335, 337, 5, 62, 0, 0, 336, 330, 1, 0, 0, 0, 336, 333, 1, 0, 0, 0,
    337, 78, 1, 0, 0, 0, 338, 339, 5, 61, 0, 0, 339, 340, 5, 61, 0, 0, 340, 341,
    5, 61, 0, 0, 341, 80, 1, 0, 0, 0, 342, 347, 3, 83, 41, 0, 343, 346, 3, 83,
    41, 0, 344, 346, 3, 87, 43, 0, 345, 343, 1, 0, 0, 0, 345, 344, 1, 0, 0, 0,
    346, 349, 1, 0, 0, 0, 347, 345, 1, 0, 0, 0, 347, 348, 1, 0, 0, 0, 348, 82,
    1, 0, 0, 0, 349, 347, 1, 0, 0, 0, 350, 351, 7, 0, 0, 0, 351, 84, 1, 0, 0, 0,
    352, 354, 3, 87, 43, 0, 353, 352, 1, 0, 0, 0, 354, 355, 1, 0, 0, 0, 355,
    353, 1, 0, 0, 0, 355, 356, 1, 0, 0, 0, 356, 86, 1, 0, 0, 0, 357, 358, 7, 1,
    0, 0, 358, 88, 1, 0, 0, 0, 359, 364, 5, 34, 0, 0, 360, 363, 3, 91, 45, 0,
    361, 363, 9, 0, 0, 0, 362, 360, 1, 0, 0, 0, 362, 361, 1, 0, 0, 0, 363, 366,
    1, 0, 0, 0, 364, 365, 1, 0, 0, 0, 364, 362, 1, 0, 0, 0, 365, 367, 1, 0, 0,
    0, 366, 364, 1, 0, 0, 0, 367, 368, 5, 34, 0, 0, 368, 90, 1, 0, 0, 0, 369,
    370, 5, 92, 0, 0, 370, 371, 7, 2, 0, 0, 371, 92, 1, 0, 0, 0, 372, 373, 5,
    47, 0, 0, 373, 374, 5, 42, 0, 0, 374, 378, 1, 0, 0, 0, 375, 377, 9, 0, 0, 0,
    376, 375, 1, 0, 0, 0, 377, 380, 1, 0, 0, 0, 378, 379, 1, 0, 0, 0, 378, 376,
    1, 0, 0, 0, 379, 381, 1, 0, 0, 0, 380, 378, 1, 0, 0, 0, 381, 382, 5, 42, 0,
    0, 382, 383, 5, 47, 0, 0, 383, 384, 1, 0, 0, 0, 384, 385, 6, 46, 0, 0, 385,
    94, 1, 0, 0, 0, 386, 387, 5, 47, 0, 0, 387, 388, 5, 47, 0, 0, 388, 392, 1,
    0, 0, 0, 389, 391, 8, 3, 0, 0, 390, 389, 1, 0, 0, 0, 391, 394, 1, 0, 0, 0,
    392, 390, 1, 0, 0, 0, 392, 393, 1, 0, 0, 0, 393, 396, 1, 0, 0, 0, 394, 392,
    1, 0, 0, 0, 395, 397, 5, 13, 0, 0, 396, 395, 1, 0, 0, 0, 396, 397, 1, 0, 0,
    0, 397, 398, 1, 0, 0, 0, 398, 399, 5, 10, 0, 0, 399, 400, 1, 0, 0, 0, 400,
    401, 6, 47, 0, 0, 401, 96, 1, 0, 0, 0, 402, 404, 7, 4, 0, 0, 403, 402, 1, 0,
    0, 0, 404, 405, 1, 0, 0, 0, 405, 403, 1, 0, 0, 0, 405, 406, 1, 0, 0, 0, 406,
    407, 1, 0, 0, 0, 407, 408, 6, 48, 0, 0, 408, 98, 1, 0, 0, 0, 15, 0, 109,
    314, 320, 328, 336, 345, 347, 355, 362, 364, 378, 392, 396, 405, 1, 0, 1, 0,
  ];

  private static __ATN: ATN;
  public static get _ATN(): ATN {
    if (!LexerCircom.__ATN) {
      LexerCircom.__ATN = new ATNDeserializer().deserialize(
        LexerCircom._serializedATN,
      );
    }

    return LexerCircom.__ATN;
  }

  static DecisionsToDFA = LexerCircom._ATN.decisionToState.map(
    (ds: DecisionState, index: number) => new DFA(ds, index),
  );
}
