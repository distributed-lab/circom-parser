// Generated from parser/LexerCircom.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
  ATN,
  ATNDeserializer,
  CharStream,
  DecisionState,
  DFA,
  Lexer,
  LexerATNSimulator,
  RuleContext,
  PredictionContextCache,
  Token,
} from "antlr4";
export default class LexerCircom extends Lexer {
  public static readonly VERSION = 1;
  public static readonly PACKAGE_NAME = 2;
  public static readonly SIGNAL_TYPE = 3;
  public static readonly SIGNAL = 4;
  public static readonly INPUT = 5;
  public static readonly OUTPUT = 6;
  public static readonly PUBLIC = 7;
  public static readonly TEMPLATE = 8;
  public static readonly COMPONENT = 9;
  public static readonly VAR = 10;
  public static readonly FUNCTION = 11;
  public static readonly RETURN = 12;
  public static readonly IF = 13;
  public static readonly ELSE = 14;
  public static readonly FOR = 15;
  public static readonly WHILE = 16;
  public static readonly DO = 17;
  public static readonly LOG = 18;
  public static readonly ASSERT = 19;
  public static readonly INCLUDE = 20;
  public static readonly CUSTOM = 21;
  public static readonly PRAGMA = 22;
  public static readonly CIRCOM = 23;
  public static readonly CUSTOM_TEMPLATES = 24;
  public static readonly MAIN = 25;
  public static readonly PARALLEL = 26;
  public static readonly LP = 27;
  public static readonly RP = 28;
  public static readonly LB = 29;
  public static readonly RB = 30;
  public static readonly LC = 31;
  public static readonly RC = 32;
  public static readonly SEMICOLON = 33;
  public static readonly COMMA = 34;
  public static readonly ASSIGNMENT = 35;
  public static readonly ASSIGMENT_OP = 36;
  public static readonly SELF_OP = 37;
  public static readonly LEFT_ASSIGNMENT = 38;
  public static readonly RIGHT_ASSIGNMENT = 39;
  public static readonly CONSTRAINT_EQ = 40;
  public static readonly ID = 41;
  public static readonly NUMBER = 42;
  public static readonly STRING = 43;
  public static readonly COMMENT = 44;
  public static readonly LINE_COMMENT = 45;
  public static readonly WS = 46;
  public static readonly MUL = 47;
  public static readonly DIV = 48;
  public static readonly MOD = 49;
  public static readonly ADD = 50;
  public static readonly SUB = 51;
  public static readonly POW = 52;
  public static readonly LSHIFT = 53;
  public static readonly RSHIFT = 54;
  public static readonly BAND = 55;
  public static readonly BXOR = 56;
  public static readonly BOR = 57;
  public static readonly EQ = 58;
  public static readonly NEQ = 59;
  public static readonly LT = 60;
  public static readonly GT = 61;
  public static readonly LE = 62;
  public static readonly GE = 63;
  public static readonly AND = 64;
  public static readonly OR = 65;
  public static readonly NOT = 66;
  public static readonly BNOT = 67;
  public static readonly EOF = Token.EOF;

  public static readonly channelNames: string[] = [
    "DEFAULT_TOKEN_CHANNEL",
    "HIDDEN",
  ];
  public static readonly literalNames: (string | null)[] = [
    null,
    null,
    null,
    null,
    "'signal'",
    "'input'",
    "'output'",
    "'public'",
    "'template'",
    "'component'",
    "'var'",
    "'function'",
    "'return'",
    "'if'",
    "'else'",
    "'for'",
    "'while'",
    "'do'",
    "'log'",
    "'assert'",
    "'include'",
    "'custom'",
    "'pragma'",
    "'circom'",
    "'custom_templates'",
    "'main'",
    "'parallel'",
    "'('",
    "')'",
    "'['",
    "']'",
    "'{'",
    "'}'",
    "';'",
    "','",
    "'='",
    null,
    null,
    null,
    null,
    "'==='",
    null,
    null,
    null,
    null,
    null,
    null,
    "'*'",
    "'/'",
    "'%'",
    "'+'",
    "'-'",
    "'**'",
    "'<<'",
    "'>>'",
    "'&'",
    "'^'",
    "'|'",
    "'=='",
    "'!='",
    "'<'",
    "'>'",
    "'<='",
    "'>='",
    "'&&'",
    "'||'",
    "'!'",
    "'~'",
  ];
  public static readonly symbolicNames: (string | null)[] = [
    null,
    "VERSION",
    "PACKAGE_NAME",
    "SIGNAL_TYPE",
    "SIGNAL",
    "INPUT",
    "OUTPUT",
    "PUBLIC",
    "TEMPLATE",
    "COMPONENT",
    "VAR",
    "FUNCTION",
    "RETURN",
    "IF",
    "ELSE",
    "FOR",
    "WHILE",
    "DO",
    "LOG",
    "ASSERT",
    "INCLUDE",
    "CUSTOM",
    "PRAGMA",
    "CIRCOM",
    "CUSTOM_TEMPLATES",
    "MAIN",
    "PARALLEL",
    "LP",
    "RP",
    "LB",
    "RB",
    "LC",
    "RC",
    "SEMICOLON",
    "COMMA",
    "ASSIGNMENT",
    "ASSIGMENT_OP",
    "SELF_OP",
    "LEFT_ASSIGNMENT",
    "RIGHT_ASSIGNMENT",
    "CONSTRAINT_EQ",
    "ID",
    "NUMBER",
    "STRING",
    "COMMENT",
    "LINE_COMMENT",
    "WS",
    "MUL",
    "DIV",
    "MOD",
    "ADD",
    "SUB",
    "POW",
    "LSHIFT",
    "RSHIFT",
    "BAND",
    "BXOR",
    "BOR",
    "EQ",
    "NEQ",
    "LT",
    "GT",
    "LE",
    "GE",
    "AND",
    "OR",
    "NOT",
    "BNOT",
  ];
  public static readonly modeNames: string[] = ["DEFAULT_MODE"];

  public static readonly ruleNames: string[] = [
    "VERSION",
    "PACKAGE_NAME",
    "SIGNAL_TYPE",
    "SIGNAL",
    "INPUT",
    "OUTPUT",
    "PUBLIC",
    "TEMPLATE",
    "COMPONENT",
    "VAR",
    "FUNCTION",
    "RETURN",
    "IF",
    "ELSE",
    "FOR",
    "WHILE",
    "DO",
    "LOG",
    "ASSERT",
    "INCLUDE",
    "CUSTOM",
    "PRAGMA",
    "CIRCOM",
    "CUSTOM_TEMPLATES",
    "MAIN",
    "PARALLEL",
    "LP",
    "RP",
    "LB",
    "RB",
    "LC",
    "RC",
    "SEMICOLON",
    "COMMA",
    "ASSIGNMENT",
    "ASSIGMENT_OP",
    "SELF_OP",
    "LEFT_ASSIGNMENT",
    "RIGHT_ASSIGNMENT",
    "CONSTRAINT_EQ",
    "ID",
    "LETTER",
    "NUMBER",
    "DIGIT",
    "STRING",
    "ESC",
    "COMMENT",
    "LINE_COMMENT",
    "WS",
    "MUL",
    "DIV",
    "MOD",
    "ADD",
    "SUB",
    "POW",
    "LSHIFT",
    "RSHIFT",
    "BAND",
    "BXOR",
    "BOR",
    "EQ",
    "NEQ",
    "LT",
    "GT",
    "LE",
    "GE",
    "AND",
    "OR",
    "NOT",
    "BNOT",
  ];

  constructor(input: CharStream) {
    super(input);
    this._interp = new LexerATNSimulator(
      this,
      LexerCircom._ATN,
      LexerCircom.DecisionsToDFA,
      new PredictionContextCache(),
    );
  }

  public get grammarFileName(): string {
    return "LexerCircom.g4";
  }

  public get literalNames(): (string | null)[] {
    return LexerCircom.literalNames;
  }
  public get symbolicNames(): (string | null)[] {
    return LexerCircom.symbolicNames;
  }
  public get ruleNames(): string[] {
    return LexerCircom.ruleNames;
  }

  public get serializedATN(): number[] {
    return LexerCircom._serializedATN;
  }

  public get channelNames(): string[] {
    return LexerCircom.channelNames;
  }

  public get modeNames(): string[] {
    return LexerCircom.modeNames;
  }

  public static readonly _serializedATN: number[] = [
    4, 0, 67, 502, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4,
    7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7,
    10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2,
    16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21, 7,
    21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2,
    27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7,
    32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2,
    38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7,
    43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2,
    49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7,
    54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2,
    60, 7, 60, 2, 61, 7, 61, 2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7,
    65, 2, 66, 7, 66, 2, 67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 1, 0, 1, 0, 1,
    0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 3, 2, 152, 8, 2, 1, 3, 1, 3, 1,
    3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5,
    1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1,
    7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8,
    1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1,
    10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1,
    11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1,
    14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1,
    16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1,
    18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1,
    20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1,
    21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1,
    23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1,
    23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1,
    25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1,
    28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1,
    33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1,
    35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1,
    35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 3, 35, 357, 8, 35, 1,
    36, 1, 36, 1, 36, 1, 36, 3, 36, 363, 8, 36, 1, 37, 1, 37, 1, 37, 1, 37, 1,
    37, 1, 37, 3, 37, 371, 8, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 3,
    38, 379, 8, 38, 1, 39, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 5, 40, 388,
    8, 40, 10, 40, 12, 40, 391, 9, 40, 1, 41, 1, 41, 1, 42, 4, 42, 396, 8, 42,
    11, 42, 12, 42, 397, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 5, 44, 405, 8, 44,
    10, 44, 12, 44, 408, 9, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 46, 1, 46,
    1, 46, 1, 46, 5, 46, 419, 8, 46, 10, 46, 12, 46, 422, 9, 46, 1, 46, 1, 46,
    1, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 47, 5, 47, 433, 8, 47, 10, 47,
    12, 47, 436, 9, 47, 1, 47, 3, 47, 439, 8, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1,
    48, 4, 48, 446, 8, 48, 11, 48, 12, 48, 447, 1, 48, 1, 48, 1, 49, 1, 49, 1,
    50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1,
    55, 1, 55, 1, 55, 1, 56, 1, 56, 1, 56, 1, 57, 1, 57, 1, 58, 1, 58, 1, 59, 1,
    59, 1, 60, 1, 60, 1, 60, 1, 61, 1, 61, 1, 61, 1, 62, 1, 62, 1, 63, 1, 63, 1,
    64, 1, 64, 1, 64, 1, 65, 1, 65, 1, 65, 1, 66, 1, 66, 1, 66, 1, 67, 1, 67, 1,
    67, 1, 68, 1, 68, 1, 69, 1, 69, 2, 406, 420, 0, 70, 1, 1, 3, 2, 5, 3, 7, 4,
    9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14,
    29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47,
    24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33,
    67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 0, 85,
    42, 87, 0, 89, 43, 91, 0, 93, 44, 95, 45, 97, 46, 99, 47, 101, 48, 103, 49,
    105, 50, 107, 51, 109, 52, 111, 53, 113, 54, 115, 55, 117, 56, 119, 57, 121,
    58, 123, 59, 125, 60, 127, 61, 129, 62, 131, 63, 133, 64, 135, 65, 137, 66,
    139, 67, 1, 0, 5, 5, 0, 36, 36, 65, 90, 95, 95, 97, 122, 128, 255, 1, 0, 48,
    57, 7, 0, 34, 34, 92, 92, 98, 98, 102, 102, 110, 110, 114, 114, 116, 116, 2,
    0, 10, 10, 13, 13, 3, 0, 9, 10, 12, 13, 32, 32, 522, 0, 1, 1, 0, 0, 0, 0, 3,
    1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1,
    0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1,
    0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1,
    0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1,
    0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1,
    0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1,
    0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1,
    0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1,
    0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1,
    0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 85, 1,
    0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1,
    0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0, 105,
    1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0,
    113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0,
    0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0,
    0, 0, 129, 1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0, 133, 1, 0, 0, 0, 0, 135, 1, 0,
    0, 0, 0, 137, 1, 0, 0, 0, 0, 139, 1, 0, 0, 0, 1, 141, 1, 0, 0, 0, 3, 147, 1,
    0, 0, 0, 5, 151, 1, 0, 0, 0, 7, 153, 1, 0, 0, 0, 9, 160, 1, 0, 0, 0, 11,
    166, 1, 0, 0, 0, 13, 173, 1, 0, 0, 0, 15, 180, 1, 0, 0, 0, 17, 189, 1, 0, 0,
    0, 19, 199, 1, 0, 0, 0, 21, 203, 1, 0, 0, 0, 23, 212, 1, 0, 0, 0, 25, 219,
    1, 0, 0, 0, 27, 222, 1, 0, 0, 0, 29, 227, 1, 0, 0, 0, 31, 231, 1, 0, 0, 0,
    33, 237, 1, 0, 0, 0, 35, 240, 1, 0, 0, 0, 37, 244, 1, 0, 0, 0, 39, 251, 1,
    0, 0, 0, 41, 259, 1, 0, 0, 0, 43, 266, 1, 0, 0, 0, 45, 273, 1, 0, 0, 0, 47,
    280, 1, 0, 0, 0, 49, 297, 1, 0, 0, 0, 51, 302, 1, 0, 0, 0, 53, 311, 1, 0, 0,
    0, 55, 313, 1, 0, 0, 0, 57, 315, 1, 0, 0, 0, 59, 317, 1, 0, 0, 0, 61, 319,
    1, 0, 0, 0, 63, 321, 1, 0, 0, 0, 65, 323, 1, 0, 0, 0, 67, 325, 1, 0, 0, 0,
    69, 327, 1, 0, 0, 0, 71, 356, 1, 0, 0, 0, 73, 362, 1, 0, 0, 0, 75, 370, 1,
    0, 0, 0, 77, 378, 1, 0, 0, 0, 79, 380, 1, 0, 0, 0, 81, 384, 1, 0, 0, 0, 83,
    392, 1, 0, 0, 0, 85, 395, 1, 0, 0, 0, 87, 399, 1, 0, 0, 0, 89, 401, 1, 0, 0,
    0, 91, 411, 1, 0, 0, 0, 93, 414, 1, 0, 0, 0, 95, 428, 1, 0, 0, 0, 97, 445,
    1, 0, 0, 0, 99, 451, 1, 0, 0, 0, 101, 453, 1, 0, 0, 0, 103, 455, 1, 0, 0, 0,
    105, 457, 1, 0, 0, 0, 107, 459, 1, 0, 0, 0, 109, 461, 1, 0, 0, 0, 111, 464,
    1, 0, 0, 0, 113, 467, 1, 0, 0, 0, 115, 470, 1, 0, 0, 0, 117, 472, 1, 0, 0,
    0, 119, 474, 1, 0, 0, 0, 121, 476, 1, 0, 0, 0, 123, 479, 1, 0, 0, 0, 125,
    482, 1, 0, 0, 0, 127, 484, 1, 0, 0, 0, 129, 486, 1, 0, 0, 0, 131, 489, 1, 0,
    0, 0, 133, 492, 1, 0, 0, 0, 135, 495, 1, 0, 0, 0, 137, 498, 1, 0, 0, 0, 139,
    500, 1, 0, 0, 0, 141, 142, 3, 85, 42, 0, 142, 143, 5, 46, 0, 0, 143, 144, 3,
    85, 42, 0, 144, 145, 5, 46, 0, 0, 145, 146, 3, 85, 42, 0, 146, 2, 1, 0, 0,
    0, 147, 148, 3, 89, 44, 0, 148, 4, 1, 0, 0, 0, 149, 152, 3, 9, 4, 0, 150,
    152, 3, 11, 5, 0, 151, 149, 1, 0, 0, 0, 151, 150, 1, 0, 0, 0, 152, 6, 1, 0,
    0, 0, 153, 154, 5, 115, 0, 0, 154, 155, 5, 105, 0, 0, 155, 156, 5, 103, 0,
    0, 156, 157, 5, 110, 0, 0, 157, 158, 5, 97, 0, 0, 158, 159, 5, 108, 0, 0,
    159, 8, 1, 0, 0, 0, 160, 161, 5, 105, 0, 0, 161, 162, 5, 110, 0, 0, 162,
    163, 5, 112, 0, 0, 163, 164, 5, 117, 0, 0, 164, 165, 5, 116, 0, 0, 165, 10,
    1, 0, 0, 0, 166, 167, 5, 111, 0, 0, 167, 168, 5, 117, 0, 0, 168, 169, 5,
    116, 0, 0, 169, 170, 5, 112, 0, 0, 170, 171, 5, 117, 0, 0, 171, 172, 5, 116,
    0, 0, 172, 12, 1, 0, 0, 0, 173, 174, 5, 112, 0, 0, 174, 175, 5, 117, 0, 0,
    175, 176, 5, 98, 0, 0, 176, 177, 5, 108, 0, 0, 177, 178, 5, 105, 0, 0, 178,
    179, 5, 99, 0, 0, 179, 14, 1, 0, 0, 0, 180, 181, 5, 116, 0, 0, 181, 182, 5,
    101, 0, 0, 182, 183, 5, 109, 0, 0, 183, 184, 5, 112, 0, 0, 184, 185, 5, 108,
    0, 0, 185, 186, 5, 97, 0, 0, 186, 187, 5, 116, 0, 0, 187, 188, 5, 101, 0, 0,
    188, 16, 1, 0, 0, 0, 189, 190, 5, 99, 0, 0, 190, 191, 5, 111, 0, 0, 191,
    192, 5, 109, 0, 0, 192, 193, 5, 112, 0, 0, 193, 194, 5, 111, 0, 0, 194, 195,
    5, 110, 0, 0, 195, 196, 5, 101, 0, 0, 196, 197, 5, 110, 0, 0, 197, 198, 5,
    116, 0, 0, 198, 18, 1, 0, 0, 0, 199, 200, 5, 118, 0, 0, 200, 201, 5, 97, 0,
    0, 201, 202, 5, 114, 0, 0, 202, 20, 1, 0, 0, 0, 203, 204, 5, 102, 0, 0, 204,
    205, 5, 117, 0, 0, 205, 206, 5, 110, 0, 0, 206, 207, 5, 99, 0, 0, 207, 208,
    5, 116, 0, 0, 208, 209, 5, 105, 0, 0, 209, 210, 5, 111, 0, 0, 210, 211, 5,
    110, 0, 0, 211, 22, 1, 0, 0, 0, 212, 213, 5, 114, 0, 0, 213, 214, 5, 101, 0,
    0, 214, 215, 5, 116, 0, 0, 215, 216, 5, 117, 0, 0, 216, 217, 5, 114, 0, 0,
    217, 218, 5, 110, 0, 0, 218, 24, 1, 0, 0, 0, 219, 220, 5, 105, 0, 0, 220,
    221, 5, 102, 0, 0, 221, 26, 1, 0, 0, 0, 222, 223, 5, 101, 0, 0, 223, 224, 5,
    108, 0, 0, 224, 225, 5, 115, 0, 0, 225, 226, 5, 101, 0, 0, 226, 28, 1, 0, 0,
    0, 227, 228, 5, 102, 0, 0, 228, 229, 5, 111, 0, 0, 229, 230, 5, 114, 0, 0,
    230, 30, 1, 0, 0, 0, 231, 232, 5, 119, 0, 0, 232, 233, 5, 104, 0, 0, 233,
    234, 5, 105, 0, 0, 234, 235, 5, 108, 0, 0, 235, 236, 5, 101, 0, 0, 236, 32,
    1, 0, 0, 0, 237, 238, 5, 100, 0, 0, 238, 239, 5, 111, 0, 0, 239, 34, 1, 0,
    0, 0, 240, 241, 5, 108, 0, 0, 241, 242, 5, 111, 0, 0, 242, 243, 5, 103, 0,
    0, 243, 36, 1, 0, 0, 0, 244, 245, 5, 97, 0, 0, 245, 246, 5, 115, 0, 0, 246,
    247, 5, 115, 0, 0, 247, 248, 5, 101, 0, 0, 248, 249, 5, 114, 0, 0, 249, 250,
    5, 116, 0, 0, 250, 38, 1, 0, 0, 0, 251, 252, 5, 105, 0, 0, 252, 253, 5, 110,
    0, 0, 253, 254, 5, 99, 0, 0, 254, 255, 5, 108, 0, 0, 255, 256, 5, 117, 0, 0,
    256, 257, 5, 100, 0, 0, 257, 258, 5, 101, 0, 0, 258, 40, 1, 0, 0, 0, 259,
    260, 5, 99, 0, 0, 260, 261, 5, 117, 0, 0, 261, 262, 5, 115, 0, 0, 262, 263,
    5, 116, 0, 0, 263, 264, 5, 111, 0, 0, 264, 265, 5, 109, 0, 0, 265, 42, 1, 0,
    0, 0, 266, 267, 5, 112, 0, 0, 267, 268, 5, 114, 0, 0, 268, 269, 5, 97, 0, 0,
    269, 270, 5, 103, 0, 0, 270, 271, 5, 109, 0, 0, 271, 272, 5, 97, 0, 0, 272,
    44, 1, 0, 0, 0, 273, 274, 5, 99, 0, 0, 274, 275, 5, 105, 0, 0, 275, 276, 5,
    114, 0, 0, 276, 277, 5, 99, 0, 0, 277, 278, 5, 111, 0, 0, 278, 279, 5, 109,
    0, 0, 279, 46, 1, 0, 0, 0, 280, 281, 5, 99, 0, 0, 281, 282, 5, 117, 0, 0,
    282, 283, 5, 115, 0, 0, 283, 284, 5, 116, 0, 0, 284, 285, 5, 111, 0, 0, 285,
    286, 5, 109, 0, 0, 286, 287, 5, 95, 0, 0, 287, 288, 5, 116, 0, 0, 288, 289,
    5, 101, 0, 0, 289, 290, 5, 109, 0, 0, 290, 291, 5, 112, 0, 0, 291, 292, 5,
    108, 0, 0, 292, 293, 5, 97, 0, 0, 293, 294, 5, 116, 0, 0, 294, 295, 5, 101,
    0, 0, 295, 296, 5, 115, 0, 0, 296, 48, 1, 0, 0, 0, 297, 298, 5, 109, 0, 0,
    298, 299, 5, 97, 0, 0, 299, 300, 5, 105, 0, 0, 300, 301, 5, 110, 0, 0, 301,
    50, 1, 0, 0, 0, 302, 303, 5, 112, 0, 0, 303, 304, 5, 97, 0, 0, 304, 305, 5,
    114, 0, 0, 305, 306, 5, 97, 0, 0, 306, 307, 5, 108, 0, 0, 307, 308, 5, 108,
    0, 0, 308, 309, 5, 101, 0, 0, 309, 310, 5, 108, 0, 0, 310, 52, 1, 0, 0, 0,
    311, 312, 5, 40, 0, 0, 312, 54, 1, 0, 0, 0, 313, 314, 5, 41, 0, 0, 314, 56,
    1, 0, 0, 0, 315, 316, 5, 91, 0, 0, 316, 58, 1, 0, 0, 0, 317, 318, 5, 93, 0,
    0, 318, 60, 1, 0, 0, 0, 319, 320, 5, 123, 0, 0, 320, 62, 1, 0, 0, 0, 321,
    322, 5, 125, 0, 0, 322, 64, 1, 0, 0, 0, 323, 324, 5, 59, 0, 0, 324, 66, 1,
    0, 0, 0, 325, 326, 5, 44, 0, 0, 326, 68, 1, 0, 0, 0, 327, 328, 5, 61, 0, 0,
    328, 70, 1, 0, 0, 0, 329, 330, 5, 43, 0, 0, 330, 357, 5, 61, 0, 0, 331, 332,
    5, 45, 0, 0, 332, 357, 5, 61, 0, 0, 333, 334, 5, 42, 0, 0, 334, 357, 5, 61,
    0, 0, 335, 336, 5, 42, 0, 0, 336, 337, 5, 42, 0, 0, 337, 357, 5, 61, 0, 0,
    338, 339, 5, 47, 0, 0, 339, 357, 5, 61, 0, 0, 340, 341, 5, 92, 0, 0, 341,
    357, 5, 61, 0, 0, 342, 343, 5, 37, 0, 0, 343, 357, 5, 61, 0, 0, 344, 345, 5,
    60, 0, 0, 345, 346, 5, 60, 0, 0, 346, 357, 5, 61, 0, 0, 347, 348, 5, 62, 0,
    0, 348, 349, 5, 62, 0, 0, 349, 357, 5, 61, 0, 0, 350, 351, 5, 38, 0, 0, 351,
    357, 5, 61, 0, 0, 352, 353, 5, 94, 0, 0, 353, 357, 5, 61, 0, 0, 354, 355, 5,
    124, 0, 0, 355, 357, 5, 61, 0, 0, 356, 329, 1, 0, 0, 0, 356, 331, 1, 0, 0,
    0, 356, 333, 1, 0, 0, 0, 356, 335, 1, 0, 0, 0, 356, 338, 1, 0, 0, 0, 356,
    340, 1, 0, 0, 0, 356, 342, 1, 0, 0, 0, 356, 344, 1, 0, 0, 0, 356, 347, 1, 0,
    0, 0, 356, 350, 1, 0, 0, 0, 356, 352, 1, 0, 0, 0, 356, 354, 1, 0, 0, 0, 357,
    72, 1, 0, 0, 0, 358, 359, 5, 43, 0, 0, 359, 363, 5, 43, 0, 0, 360, 361, 5,
    45, 0, 0, 361, 363, 5, 45, 0, 0, 362, 358, 1, 0, 0, 0, 362, 360, 1, 0, 0, 0,
    363, 74, 1, 0, 0, 0, 364, 365, 5, 60, 0, 0, 365, 366, 5, 45, 0, 0, 366, 371,
    5, 45, 0, 0, 367, 368, 5, 60, 0, 0, 368, 369, 5, 61, 0, 0, 369, 371, 5, 61,
    0, 0, 370, 364, 1, 0, 0, 0, 370, 367, 1, 0, 0, 0, 371, 76, 1, 0, 0, 0, 372,
    373, 5, 45, 0, 0, 373, 374, 5, 45, 0, 0, 374, 379, 5, 62, 0, 0, 375, 376, 5,
    61, 0, 0, 376, 377, 5, 61, 0, 0, 377, 379, 5, 62, 0, 0, 378, 372, 1, 0, 0,
    0, 378, 375, 1, 0, 0, 0, 379, 78, 1, 0, 0, 0, 380, 381, 5, 61, 0, 0, 381,
    382, 5, 61, 0, 0, 382, 383, 5, 61, 0, 0, 383, 80, 1, 0, 0, 0, 384, 389, 3,
    83, 41, 0, 385, 388, 3, 83, 41, 0, 386, 388, 3, 87, 43, 0, 387, 385, 1, 0,
    0, 0, 387, 386, 1, 0, 0, 0, 388, 391, 1, 0, 0, 0, 389, 387, 1, 0, 0, 0, 389,
    390, 1, 0, 0, 0, 390, 82, 1, 0, 0, 0, 391, 389, 1, 0, 0, 0, 392, 393, 7, 0,
    0, 0, 393, 84, 1, 0, 0, 0, 394, 396, 3, 87, 43, 0, 395, 394, 1, 0, 0, 0,
    396, 397, 1, 0, 0, 0, 397, 395, 1, 0, 0, 0, 397, 398, 1, 0, 0, 0, 398, 86,
    1, 0, 0, 0, 399, 400, 7, 1, 0, 0, 400, 88, 1, 0, 0, 0, 401, 406, 5, 34, 0,
    0, 402, 405, 3, 91, 45, 0, 403, 405, 9, 0, 0, 0, 404, 402, 1, 0, 0, 0, 404,
    403, 1, 0, 0, 0, 405, 408, 1, 0, 0, 0, 406, 407, 1, 0, 0, 0, 406, 404, 1, 0,
    0, 0, 407, 409, 1, 0, 0, 0, 408, 406, 1, 0, 0, 0, 409, 410, 5, 34, 0, 0,
    410, 90, 1, 0, 0, 0, 411, 412, 5, 92, 0, 0, 412, 413, 7, 2, 0, 0, 413, 92,
    1, 0, 0, 0, 414, 415, 5, 47, 0, 0, 415, 416, 5, 42, 0, 0, 416, 420, 1, 0, 0,
    0, 417, 419, 9, 0, 0, 0, 418, 417, 1, 0, 0, 0, 419, 422, 1, 0, 0, 0, 420,
    421, 1, 0, 0, 0, 420, 418, 1, 0, 0, 0, 421, 423, 1, 0, 0, 0, 422, 420, 1, 0,
    0, 0, 423, 424, 5, 42, 0, 0, 424, 425, 5, 47, 0, 0, 425, 426, 1, 0, 0, 0,
    426, 427, 6, 46, 0, 0, 427, 94, 1, 0, 0, 0, 428, 429, 5, 47, 0, 0, 429, 430,
    5, 47, 0, 0, 430, 434, 1, 0, 0, 0, 431, 433, 8, 3, 0, 0, 432, 431, 1, 0, 0,
    0, 433, 436, 1, 0, 0, 0, 434, 432, 1, 0, 0, 0, 434, 435, 1, 0, 0, 0, 435,
    438, 1, 0, 0, 0, 436, 434, 1, 0, 0, 0, 437, 439, 5, 13, 0, 0, 438, 437, 1,
    0, 0, 0, 438, 439, 1, 0, 0, 0, 439, 440, 1, 0, 0, 0, 440, 441, 5, 10, 0, 0,
    441, 442, 1, 0, 0, 0, 442, 443, 6, 47, 0, 0, 443, 96, 1, 0, 0, 0, 444, 446,
    7, 4, 0, 0, 445, 444, 1, 0, 0, 0, 446, 447, 1, 0, 0, 0, 447, 445, 1, 0, 0,
    0, 447, 448, 1, 0, 0, 0, 448, 449, 1, 0, 0, 0, 449, 450, 6, 48, 0, 0, 450,
    98, 1, 0, 0, 0, 451, 452, 5, 42, 0, 0, 452, 100, 1, 0, 0, 0, 453, 454, 5,
    47, 0, 0, 454, 102, 1, 0, 0, 0, 455, 456, 5, 37, 0, 0, 456, 104, 1, 0, 0, 0,
    457, 458, 5, 43, 0, 0, 458, 106, 1, 0, 0, 0, 459, 460, 5, 45, 0, 0, 460,
    108, 1, 0, 0, 0, 461, 462, 5, 42, 0, 0, 462, 463, 5, 42, 0, 0, 463, 110, 1,
    0, 0, 0, 464, 465, 5, 60, 0, 0, 465, 466, 5, 60, 0, 0, 466, 112, 1, 0, 0, 0,
    467, 468, 5, 62, 0, 0, 468, 469, 5, 62, 0, 0, 469, 114, 1, 0, 0, 0, 470,
    471, 5, 38, 0, 0, 471, 116, 1, 0, 0, 0, 472, 473, 5, 94, 0, 0, 473, 118, 1,
    0, 0, 0, 474, 475, 5, 124, 0, 0, 475, 120, 1, 0, 0, 0, 476, 477, 5, 61, 0,
    0, 477, 478, 5, 61, 0, 0, 478, 122, 1, 0, 0, 0, 479, 480, 5, 33, 0, 0, 480,
    481, 5, 61, 0, 0, 481, 124, 1, 0, 0, 0, 482, 483, 5, 60, 0, 0, 483, 126, 1,
    0, 0, 0, 484, 485, 5, 62, 0, 0, 485, 128, 1, 0, 0, 0, 486, 487, 5, 60, 0, 0,
    487, 488, 5, 61, 0, 0, 488, 130, 1, 0, 0, 0, 489, 490, 5, 62, 0, 0, 490,
    491, 5, 61, 0, 0, 491, 132, 1, 0, 0, 0, 492, 493, 5, 38, 0, 0, 493, 494, 5,
    38, 0, 0, 494, 134, 1, 0, 0, 0, 495, 496, 5, 124, 0, 0, 496, 497, 5, 124, 0,
    0, 497, 136, 1, 0, 0, 0, 498, 499, 5, 33, 0, 0, 499, 138, 1, 0, 0, 0, 500,
    501, 5, 126, 0, 0, 501, 140, 1, 0, 0, 0, 15, 0, 151, 356, 362, 370, 378,
    387, 389, 397, 404, 406, 420, 434, 438, 447, 1, 0, 1, 0,
  ];

  private static __ATN: ATN;
  public static get _ATN(): ATN {
    if (!LexerCircom.__ATN) {
      LexerCircom.__ATN = new ATNDeserializer().deserialize(
        LexerCircom._serializedATN,
      );
    }

    return LexerCircom.__ATN;
  }

  static DecisionsToDFA = LexerCircom._ATN.decisionToState.map(
    (ds: DecisionState, index: number) => new DFA(ds, index),
  );
}
