// Generated from parser/LexerCircom.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
  ATN,
  ATNDeserializer,
  CharStream,
  DecisionState,
  DFA,
  Lexer,
  LexerATNSimulator,
  RuleContext,
  PredictionContextCache,
  Token,
} from "antlr4";
export default class LexerCircom extends Lexer {
  public static readonly VERSION = 1;
  public static readonly SIGNAL_TYPE = 2;
  public static readonly SIGNAL = 3;
  public static readonly INPUT = 4;
  public static readonly OUTPUT = 5;
  public static readonly PUBLIC = 6;
  public static readonly TEMPLATE = 7;
  public static readonly COMPONENT = 8;
  public static readonly VAR = 9;
  public static readonly FUNCTION = 10;
  public static readonly RETURN = 11;
  public static readonly IF = 12;
  public static readonly ELSE = 13;
  public static readonly FOR = 14;
  public static readonly WHILE = 15;
  public static readonly DO = 16;
  public static readonly LOG = 17;
  public static readonly ASSERT = 18;
  public static readonly INCLUDE = 19;
  public static readonly CUSTOM = 20;
  public static readonly PRAGMA = 21;
  public static readonly CIRCOM = 22;
  public static readonly CUSTOM_TEMPLATES = 23;
  public static readonly MAIN = 24;
  public static readonly PARALLEL = 25;
  public static readonly LP = 26;
  public static readonly RP = 27;
  public static readonly LB = 28;
  public static readonly RB = 29;
  public static readonly LC = 30;
  public static readonly RC = 31;
  public static readonly SEMICOLON = 32;
  public static readonly COMMA = 33;
  public static readonly ASSIGNMENT = 34;
  public static readonly ASSIGNMENT_OP = 35;
  public static readonly SELF_OP = 36;
  public static readonly LEFT_ASSIGNMENT = 37;
  public static readonly RIGHT_ASSIGNMENT = 38;
  public static readonly CONSTRAINT_EQ = 39;
  public static readonly NOT = 40;
  public static readonly BNOT = 41;
  public static readonly POW = 42;
  public static readonly MUL = 43;
  public static readonly DIV = 44;
  public static readonly QUO = 45;
  public static readonly MOD = 46;
  public static readonly ADD = 47;
  public static readonly SUB = 48;
  public static readonly SHL = 49;
  public static readonly SHR = 50;
  public static readonly BAND = 51;
  public static readonly BXOR = 52;
  public static readonly BOR = 53;
  public static readonly EQ = 54;
  public static readonly NEQ = 55;
  public static readonly GT = 56;
  public static readonly LT = 57;
  public static readonly LE = 58;
  public static readonly GE = 59;
  public static readonly AND = 60;
  public static readonly OR = 61;
  public static readonly ID = 62;
  public static readonly NUMBER = 63;
  public static readonly HEX = 64;
  public static readonly STRING = 65;
  public static readonly COMMENT = 66;
  public static readonly LINE_COMMENT = 67;
  public static readonly WS = 68;
  public static readonly EOF = Token.EOF;

  public static readonly channelNames: string[] = [
    "DEFAULT_TOKEN_CHANNEL",
    "HIDDEN",
  ];
  public static readonly literalNames: (string | null)[] = [
    null,
    null,
    null,
    "'signal'",
    "'input'",
    "'output'",
    "'public'",
    "'template'",
    "'component'",
    "'var'",
    "'function'",
    "'return'",
    "'if'",
    "'else'",
    "'for'",
    "'while'",
    "'do'",
    "'log'",
    "'assert'",
    "'include'",
    "'custom'",
    "'pragma'",
    "'circom'",
    "'custom_templates'",
    "'main'",
    "'parallel'",
    "'('",
    "')'",
    "'['",
    "']'",
    "'{'",
    "'}'",
    "';'",
    "','",
    "'='",
    null,
    null,
    null,
    null,
    "'==='",
    "'!'",
    "'~'",
    "'**'",
    "'*'",
    "'/'",
    "'\\'",
    "'%'",
    "'+'",
    "'-'",
    "'<<'",
    "'>>'",
    "'&'",
    "'^'",
    "'|'",
    "'=='",
    "'!='",
    "'>'",
    "'<'",
    "'>='",
    "'<='",
    "'&&'",
    "'||'",
  ];
  public static readonly symbolicNames: (string | null)[] = [
    null,
    "VERSION",
    "SIGNAL_TYPE",
    "SIGNAL",
    "INPUT",
    "OUTPUT",
    "PUBLIC",
    "TEMPLATE",
    "COMPONENT",
    "VAR",
    "FUNCTION",
    "RETURN",
    "IF",
    "ELSE",
    "FOR",
    "WHILE",
    "DO",
    "LOG",
    "ASSERT",
    "INCLUDE",
    "CUSTOM",
    "PRAGMA",
    "CIRCOM",
    "CUSTOM_TEMPLATES",
    "MAIN",
    "PARALLEL",
    "LP",
    "RP",
    "LB",
    "RB",
    "LC",
    "RC",
    "SEMICOLON",
    "COMMA",
    "ASSIGNMENT",
    "ASSIGNMENT_OP",
    "SELF_OP",
    "LEFT_ASSIGNMENT",
    "RIGHT_ASSIGNMENT",
    "CONSTRAINT_EQ",
    "NOT",
    "BNOT",
    "POW",
    "MUL",
    "DIV",
    "QUO",
    "MOD",
    "ADD",
    "SUB",
    "SHL",
    "SHR",
    "BAND",
    "BXOR",
    "BOR",
    "EQ",
    "NEQ",
    "GT",
    "LT",
    "LE",
    "GE",
    "AND",
    "OR",
    "ID",
    "NUMBER",
    "HEX",
    "STRING",
    "COMMENT",
    "LINE_COMMENT",
    "WS",
  ];
  public static readonly modeNames: string[] = ["DEFAULT_MODE"];

  public static readonly ruleNames: string[] = [
    "VERSION",
    "SIGNAL_TYPE",
    "SIGNAL",
    "INPUT",
    "OUTPUT",
    "PUBLIC",
    "TEMPLATE",
    "COMPONENT",
    "VAR",
    "FUNCTION",
    "RETURN",
    "IF",
    "ELSE",
    "FOR",
    "WHILE",
    "DO",
    "LOG",
    "ASSERT",
    "INCLUDE",
    "CUSTOM",
    "PRAGMA",
    "CIRCOM",
    "CUSTOM_TEMPLATES",
    "MAIN",
    "PARALLEL",
    "LP",
    "RP",
    "LB",
    "RB",
    "LC",
    "RC",
    "SEMICOLON",
    "COMMA",
    "ASSIGNMENT",
    "ASSIGNMENT_OP",
    "SELF_OP",
    "LEFT_ASSIGNMENT",
    "RIGHT_ASSIGNMENT",
    "CONSTRAINT_EQ",
    "NOT",
    "BNOT",
    "POW",
    "MUL",
    "DIV",
    "QUO",
    "MOD",
    "ADD",
    "SUB",
    "SHL",
    "SHR",
    "BAND",
    "BXOR",
    "BOR",
    "EQ",
    "NEQ",
    "GT",
    "LT",
    "LE",
    "GE",
    "AND",
    "OR",
    "ID",
    "LETTER",
    "ID_SYMBOL",
    "NUMBER",
    "DIGIT",
    "HEX",
    "HEXDIGIT",
    "STRING",
    "ESC",
    "COMMENT",
    "LINE_COMMENT",
    "WS",
  ];

  constructor(input: CharStream) {
    super(input);
    this._interp = new LexerATNSimulator(
      this,
      LexerCircom._ATN,
      LexerCircom.DecisionsToDFA,
      new PredictionContextCache(),
    );
  }

  public get grammarFileName(): string {
    return "LexerCircom.g4";
  }

  public get literalNames(): (string | null)[] {
    return LexerCircom.literalNames;
  }
  public get symbolicNames(): (string | null)[] {
    return LexerCircom.symbolicNames;
  }
  public get ruleNames(): string[] {
    return LexerCircom.ruleNames;
  }

  public get serializedATN(): number[] {
    return LexerCircom._serializedATN;
  }

  public get channelNames(): string[] {
    return LexerCircom.channelNames;
  }

  public get modeNames(): string[] {
    return LexerCircom.modeNames;
  }

  public static readonly _serializedATN: number[] = [
    4, 0, 68, 529, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4,
    7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2, 10, 7,
    10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2,
    16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21, 7,
    21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2,
    27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7,
    32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2,
    38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7,
    43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2,
    49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7,
    54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2,
    60, 7, 60, 2, 61, 7, 61, 2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7,
    65, 2, 66, 7, 66, 2, 67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2,
    71, 7, 71, 2, 72, 7, 72, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 3,
    1, 156, 8, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1,
    3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5,
    1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1,
    6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8,
    1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1,
    10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1,
    12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1,
    14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1,
    17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1,
    18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1,
    20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1,
    21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1,
    22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1,
    23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1,
    25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1,
    31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1,
    34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1,
    34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 3,
    34, 361, 8, 34, 1, 35, 1, 35, 1, 35, 1, 35, 3, 35, 367, 8, 35, 1, 36, 1, 36,
    1, 36, 1, 36, 1, 36, 1, 36, 3, 36, 375, 8, 36, 1, 37, 1, 37, 1, 37, 1, 37,
    1, 37, 1, 37, 3, 37, 383, 8, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39,
    1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44,
    1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 48, 1, 49, 1, 49,
    1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 54,
    1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 58, 1, 58,
    1, 58, 1, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1, 60, 1, 61, 5, 61, 443, 8, 61,
    10, 61, 12, 61, 446, 9, 61, 1, 61, 1, 61, 1, 61, 1, 61, 5, 61, 452, 8, 61,
    10, 61, 12, 61, 455, 9, 61, 1, 62, 1, 62, 1, 63, 1, 63, 1, 64, 4, 64, 462,
    8, 64, 11, 64, 12, 64, 463, 1, 64, 3, 64, 467, 8, 64, 1, 65, 1, 65, 1, 66,
    1, 66, 1, 66, 4, 66, 474, 8, 66, 11, 66, 12, 66, 475, 1, 67, 1, 67, 1, 68,
    1, 68, 1, 68, 5, 68, 483, 8, 68, 10, 68, 12, 68, 486, 9, 68, 1, 68, 1, 68,
    1, 69, 1, 69, 1, 69, 1, 70, 1, 70, 1, 70, 1, 70, 5, 70, 497, 8, 70, 10, 70,
    12, 70, 500, 9, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 71, 1, 71, 1, 71,
    1, 71, 5, 71, 511, 8, 71, 10, 71, 12, 71, 514, 9, 71, 1, 71, 3, 71, 517, 8,
    71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 72, 4, 72, 524, 8, 72, 11, 72, 12, 72,
    525, 1, 72, 1, 72, 2, 484, 498, 0, 73, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6,
    13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16,
    33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51,
    26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35,
    71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89,
    45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51, 103, 52, 105, 53, 107,
    54, 109, 55, 111, 56, 113, 57, 115, 58, 117, 59, 119, 60, 121, 61, 123, 62,
    125, 0, 127, 0, 129, 63, 131, 0, 133, 64, 135, 0, 137, 65, 139, 0, 141, 66,
    143, 67, 145, 68, 1, 0, 7, 3, 0, 65, 90, 97, 122, 128, 255, 2, 0, 36, 36,
    95, 95, 1, 0, 48, 57, 3, 0, 48, 57, 65, 70, 97, 102, 7, 0, 34, 34, 92, 92,
    98, 98, 102, 102, 110, 110, 114, 114, 116, 116, 2, 0, 10, 10, 13, 13, 3, 0,
    9, 10, 12, 13, 32, 32, 551, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0,
    0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0,
    0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0,
    0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0,
    0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0,
    0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0,
    0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0,
    0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0,
    0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0,
    0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0,
    0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0,
    0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0,
    0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0,
    0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0,
    0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1,
    0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 129,
    1, 0, 0, 0, 0, 133, 1, 0, 0, 0, 0, 137, 1, 0, 0, 0, 0, 141, 1, 0, 0, 0, 0,
    143, 1, 0, 0, 0, 0, 145, 1, 0, 0, 0, 1, 147, 1, 0, 0, 0, 3, 155, 1, 0, 0, 0,
    5, 157, 1, 0, 0, 0, 7, 164, 1, 0, 0, 0, 9, 170, 1, 0, 0, 0, 11, 177, 1, 0,
    0, 0, 13, 184, 1, 0, 0, 0, 15, 193, 1, 0, 0, 0, 17, 203, 1, 0, 0, 0, 19,
    207, 1, 0, 0, 0, 21, 216, 1, 0, 0, 0, 23, 223, 1, 0, 0, 0, 25, 226, 1, 0, 0,
    0, 27, 231, 1, 0, 0, 0, 29, 235, 1, 0, 0, 0, 31, 241, 1, 0, 0, 0, 33, 244,
    1, 0, 0, 0, 35, 248, 1, 0, 0, 0, 37, 255, 1, 0, 0, 0, 39, 263, 1, 0, 0, 0,
    41, 270, 1, 0, 0, 0, 43, 277, 1, 0, 0, 0, 45, 284, 1, 0, 0, 0, 47, 301, 1,
    0, 0, 0, 49, 306, 1, 0, 0, 0, 51, 315, 1, 0, 0, 0, 53, 317, 1, 0, 0, 0, 55,
    319, 1, 0, 0, 0, 57, 321, 1, 0, 0, 0, 59, 323, 1, 0, 0, 0, 61, 325, 1, 0, 0,
    0, 63, 327, 1, 0, 0, 0, 65, 329, 1, 0, 0, 0, 67, 331, 1, 0, 0, 0, 69, 360,
    1, 0, 0, 0, 71, 366, 1, 0, 0, 0, 73, 374, 1, 0, 0, 0, 75, 382, 1, 0, 0, 0,
    77, 384, 1, 0, 0, 0, 79, 388, 1, 0, 0, 0, 81, 390, 1, 0, 0, 0, 83, 392, 1,
    0, 0, 0, 85, 395, 1, 0, 0, 0, 87, 397, 1, 0, 0, 0, 89, 399, 1, 0, 0, 0, 91,
    401, 1, 0, 0, 0, 93, 403, 1, 0, 0, 0, 95, 405, 1, 0, 0, 0, 97, 407, 1, 0, 0,
    0, 99, 410, 1, 0, 0, 0, 101, 413, 1, 0, 0, 0, 103, 415, 1, 0, 0, 0, 105,
    417, 1, 0, 0, 0, 107, 419, 1, 0, 0, 0, 109, 422, 1, 0, 0, 0, 111, 425, 1, 0,
    0, 0, 113, 427, 1, 0, 0, 0, 115, 429, 1, 0, 0, 0, 117, 432, 1, 0, 0, 0, 119,
    435, 1, 0, 0, 0, 121, 438, 1, 0, 0, 0, 123, 444, 1, 0, 0, 0, 125, 456, 1, 0,
    0, 0, 127, 458, 1, 0, 0, 0, 129, 466, 1, 0, 0, 0, 131, 468, 1, 0, 0, 0, 133,
    470, 1, 0, 0, 0, 135, 477, 1, 0, 0, 0, 137, 479, 1, 0, 0, 0, 139, 489, 1, 0,
    0, 0, 141, 492, 1, 0, 0, 0, 143, 506, 1, 0, 0, 0, 145, 523, 1, 0, 0, 0, 147,
    148, 3, 129, 64, 0, 148, 149, 5, 46, 0, 0, 149, 150, 3, 129, 64, 0, 150,
    151, 5, 46, 0, 0, 151, 152, 3, 129, 64, 0, 152, 2, 1, 0, 0, 0, 153, 156, 3,
    7, 3, 0, 154, 156, 3, 9, 4, 0, 155, 153, 1, 0, 0, 0, 155, 154, 1, 0, 0, 0,
    156, 4, 1, 0, 0, 0, 157, 158, 5, 115, 0, 0, 158, 159, 5, 105, 0, 0, 159,
    160, 5, 103, 0, 0, 160, 161, 5, 110, 0, 0, 161, 162, 5, 97, 0, 0, 162, 163,
    5, 108, 0, 0, 163, 6, 1, 0, 0, 0, 164, 165, 5, 105, 0, 0, 165, 166, 5, 110,
    0, 0, 166, 167, 5, 112, 0, 0, 167, 168, 5, 117, 0, 0, 168, 169, 5, 116, 0,
    0, 169, 8, 1, 0, 0, 0, 170, 171, 5, 111, 0, 0, 171, 172, 5, 117, 0, 0, 172,
    173, 5, 116, 0, 0, 173, 174, 5, 112, 0, 0, 174, 175, 5, 117, 0, 0, 175, 176,
    5, 116, 0, 0, 176, 10, 1, 0, 0, 0, 177, 178, 5, 112, 0, 0, 178, 179, 5, 117,
    0, 0, 179, 180, 5, 98, 0, 0, 180, 181, 5, 108, 0, 0, 181, 182, 5, 105, 0, 0,
    182, 183, 5, 99, 0, 0, 183, 12, 1, 0, 0, 0, 184, 185, 5, 116, 0, 0, 185,
    186, 5, 101, 0, 0, 186, 187, 5, 109, 0, 0, 187, 188, 5, 112, 0, 0, 188, 189,
    5, 108, 0, 0, 189, 190, 5, 97, 0, 0, 190, 191, 5, 116, 0, 0, 191, 192, 5,
    101, 0, 0, 192, 14, 1, 0, 0, 0, 193, 194, 5, 99, 0, 0, 194, 195, 5, 111, 0,
    0, 195, 196, 5, 109, 0, 0, 196, 197, 5, 112, 0, 0, 197, 198, 5, 111, 0, 0,
    198, 199, 5, 110, 0, 0, 199, 200, 5, 101, 0, 0, 200, 201, 5, 110, 0, 0, 201,
    202, 5, 116, 0, 0, 202, 16, 1, 0, 0, 0, 203, 204, 5, 118, 0, 0, 204, 205, 5,
    97, 0, 0, 205, 206, 5, 114, 0, 0, 206, 18, 1, 0, 0, 0, 207, 208, 5, 102, 0,
    0, 208, 209, 5, 117, 0, 0, 209, 210, 5, 110, 0, 0, 210, 211, 5, 99, 0, 0,
    211, 212, 5, 116, 0, 0, 212, 213, 5, 105, 0, 0, 213, 214, 5, 111, 0, 0, 214,
    215, 5, 110, 0, 0, 215, 20, 1, 0, 0, 0, 216, 217, 5, 114, 0, 0, 217, 218, 5,
    101, 0, 0, 218, 219, 5, 116, 0, 0, 219, 220, 5, 117, 0, 0, 220, 221, 5, 114,
    0, 0, 221, 222, 5, 110, 0, 0, 222, 22, 1, 0, 0, 0, 223, 224, 5, 105, 0, 0,
    224, 225, 5, 102, 0, 0, 225, 24, 1, 0, 0, 0, 226, 227, 5, 101, 0, 0, 227,
    228, 5, 108, 0, 0, 228, 229, 5, 115, 0, 0, 229, 230, 5, 101, 0, 0, 230, 26,
    1, 0, 0, 0, 231, 232, 5, 102, 0, 0, 232, 233, 5, 111, 0, 0, 233, 234, 5,
    114, 0, 0, 234, 28, 1, 0, 0, 0, 235, 236, 5, 119, 0, 0, 236, 237, 5, 104, 0,
    0, 237, 238, 5, 105, 0, 0, 238, 239, 5, 108, 0, 0, 239, 240, 5, 101, 0, 0,
    240, 30, 1, 0, 0, 0, 241, 242, 5, 100, 0, 0, 242, 243, 5, 111, 0, 0, 243,
    32, 1, 0, 0, 0, 244, 245, 5, 108, 0, 0, 245, 246, 5, 111, 0, 0, 246, 247, 5,
    103, 0, 0, 247, 34, 1, 0, 0, 0, 248, 249, 5, 97, 0, 0, 249, 250, 5, 115, 0,
    0, 250, 251, 5, 115, 0, 0, 251, 252, 5, 101, 0, 0, 252, 253, 5, 114, 0, 0,
    253, 254, 5, 116, 0, 0, 254, 36, 1, 0, 0, 0, 255, 256, 5, 105, 0, 0, 256,
    257, 5, 110, 0, 0, 257, 258, 5, 99, 0, 0, 258, 259, 5, 108, 0, 0, 259, 260,
    5, 117, 0, 0, 260, 261, 5, 100, 0, 0, 261, 262, 5, 101, 0, 0, 262, 38, 1, 0,
    0, 0, 263, 264, 5, 99, 0, 0, 264, 265, 5, 117, 0, 0, 265, 266, 5, 115, 0, 0,
    266, 267, 5, 116, 0, 0, 267, 268, 5, 111, 0, 0, 268, 269, 5, 109, 0, 0, 269,
    40, 1, 0, 0, 0, 270, 271, 5, 112, 0, 0, 271, 272, 5, 114, 0, 0, 272, 273, 5,
    97, 0, 0, 273, 274, 5, 103, 0, 0, 274, 275, 5, 109, 0, 0, 275, 276, 5, 97,
    0, 0, 276, 42, 1, 0, 0, 0, 277, 278, 5, 99, 0, 0, 278, 279, 5, 105, 0, 0,
    279, 280, 5, 114, 0, 0, 280, 281, 5, 99, 0, 0, 281, 282, 5, 111, 0, 0, 282,
    283, 5, 109, 0, 0, 283, 44, 1, 0, 0, 0, 284, 285, 5, 99, 0, 0, 285, 286, 5,
    117, 0, 0, 286, 287, 5, 115, 0, 0, 287, 288, 5, 116, 0, 0, 288, 289, 5, 111,
    0, 0, 289, 290, 5, 109, 0, 0, 290, 291, 5, 95, 0, 0, 291, 292, 5, 116, 0, 0,
    292, 293, 5, 101, 0, 0, 293, 294, 5, 109, 0, 0, 294, 295, 5, 112, 0, 0, 295,
    296, 5, 108, 0, 0, 296, 297, 5, 97, 0, 0, 297, 298, 5, 116, 0, 0, 298, 299,
    5, 101, 0, 0, 299, 300, 5, 115, 0, 0, 300, 46, 1, 0, 0, 0, 301, 302, 5, 109,
    0, 0, 302, 303, 5, 97, 0, 0, 303, 304, 5, 105, 0, 0, 304, 305, 5, 110, 0, 0,
    305, 48, 1, 0, 0, 0, 306, 307, 5, 112, 0, 0, 307, 308, 5, 97, 0, 0, 308,
    309, 5, 114, 0, 0, 309, 310, 5, 97, 0, 0, 310, 311, 5, 108, 0, 0, 311, 312,
    5, 108, 0, 0, 312, 313, 5, 101, 0, 0, 313, 314, 5, 108, 0, 0, 314, 50, 1, 0,
    0, 0, 315, 316, 5, 40, 0, 0, 316, 52, 1, 0, 0, 0, 317, 318, 5, 41, 0, 0,
    318, 54, 1, 0, 0, 0, 319, 320, 5, 91, 0, 0, 320, 56, 1, 0, 0, 0, 321, 322,
    5, 93, 0, 0, 322, 58, 1, 0, 0, 0, 323, 324, 5, 123, 0, 0, 324, 60, 1, 0, 0,
    0, 325, 326, 5, 125, 0, 0, 326, 62, 1, 0, 0, 0, 327, 328, 5, 59, 0, 0, 328,
    64, 1, 0, 0, 0, 329, 330, 5, 44, 0, 0, 330, 66, 1, 0, 0, 0, 331, 332, 5, 61,
    0, 0, 332, 68, 1, 0, 0, 0, 333, 334, 5, 43, 0, 0, 334, 361, 5, 61, 0, 0,
    335, 336, 5, 45, 0, 0, 336, 361, 5, 61, 0, 0, 337, 338, 5, 42, 0, 0, 338,
    361, 5, 61, 0, 0, 339, 340, 5, 42, 0, 0, 340, 341, 5, 42, 0, 0, 341, 361, 5,
    61, 0, 0, 342, 343, 5, 47, 0, 0, 343, 361, 5, 61, 0, 0, 344, 345, 5, 92, 0,
    0, 345, 361, 5, 61, 0, 0, 346, 347, 5, 37, 0, 0, 347, 361, 5, 61, 0, 0, 348,
    349, 5, 60, 0, 0, 349, 350, 5, 60, 0, 0, 350, 361, 5, 61, 0, 0, 351, 352, 5,
    62, 0, 0, 352, 353, 5, 62, 0, 0, 353, 361, 5, 61, 0, 0, 354, 355, 5, 38, 0,
    0, 355, 361, 5, 61, 0, 0, 356, 357, 5, 94, 0, 0, 357, 361, 5, 61, 0, 0, 358,
    359, 5, 124, 0, 0, 359, 361, 5, 61, 0, 0, 360, 333, 1, 0, 0, 0, 360, 335, 1,
    0, 0, 0, 360, 337, 1, 0, 0, 0, 360, 339, 1, 0, 0, 0, 360, 342, 1, 0, 0, 0,
    360, 344, 1, 0, 0, 0, 360, 346, 1, 0, 0, 0, 360, 348, 1, 0, 0, 0, 360, 351,
    1, 0, 0, 0, 360, 354, 1, 0, 0, 0, 360, 356, 1, 0, 0, 0, 360, 358, 1, 0, 0,
    0, 361, 70, 1, 0, 0, 0, 362, 363, 5, 43, 0, 0, 363, 367, 5, 43, 0, 0, 364,
    365, 5, 45, 0, 0, 365, 367, 5, 45, 0, 0, 366, 362, 1, 0, 0, 0, 366, 364, 1,
    0, 0, 0, 367, 72, 1, 0, 0, 0, 368, 369, 5, 60, 0, 0, 369, 370, 5, 45, 0, 0,
    370, 375, 5, 45, 0, 0, 371, 372, 5, 60, 0, 0, 372, 373, 5, 61, 0, 0, 373,
    375, 5, 61, 0, 0, 374, 368, 1, 0, 0, 0, 374, 371, 1, 0, 0, 0, 375, 74, 1, 0,
    0, 0, 376, 377, 5, 45, 0, 0, 377, 378, 5, 45, 0, 0, 378, 383, 5, 62, 0, 0,
    379, 380, 5, 61, 0, 0, 380, 381, 5, 61, 0, 0, 381, 383, 5, 62, 0, 0, 382,
    376, 1, 0, 0, 0, 382, 379, 1, 0, 0, 0, 383, 76, 1, 0, 0, 0, 384, 385, 5, 61,
    0, 0, 385, 386, 5, 61, 0, 0, 386, 387, 5, 61, 0, 0, 387, 78, 1, 0, 0, 0,
    388, 389, 5, 33, 0, 0, 389, 80, 1, 0, 0, 0, 390, 391, 5, 126, 0, 0, 391, 82,
    1, 0, 0, 0, 392, 393, 5, 42, 0, 0, 393, 394, 5, 42, 0, 0, 394, 84, 1, 0, 0,
    0, 395, 396, 5, 42, 0, 0, 396, 86, 1, 0, 0, 0, 397, 398, 5, 47, 0, 0, 398,
    88, 1, 0, 0, 0, 399, 400, 5, 92, 0, 0, 400, 90, 1, 0, 0, 0, 401, 402, 5, 37,
    0, 0, 402, 92, 1, 0, 0, 0, 403, 404, 5, 43, 0, 0, 404, 94, 1, 0, 0, 0, 405,
    406, 5, 45, 0, 0, 406, 96, 1, 0, 0, 0, 407, 408, 5, 60, 0, 0, 408, 409, 5,
    60, 0, 0, 409, 98, 1, 0, 0, 0, 410, 411, 5, 62, 0, 0, 411, 412, 5, 62, 0, 0,
    412, 100, 1, 0, 0, 0, 413, 414, 5, 38, 0, 0, 414, 102, 1, 0, 0, 0, 415, 416,
    5, 94, 0, 0, 416, 104, 1, 0, 0, 0, 417, 418, 5, 124, 0, 0, 418, 106, 1, 0,
    0, 0, 419, 420, 5, 61, 0, 0, 420, 421, 5, 61, 0, 0, 421, 108, 1, 0, 0, 0,
    422, 423, 5, 33, 0, 0, 423, 424, 5, 61, 0, 0, 424, 110, 1, 0, 0, 0, 425,
    426, 5, 62, 0, 0, 426, 112, 1, 0, 0, 0, 427, 428, 5, 60, 0, 0, 428, 114, 1,
    0, 0, 0, 429, 430, 5, 62, 0, 0, 430, 431, 5, 61, 0, 0, 431, 116, 1, 0, 0, 0,
    432, 433, 5, 60, 0, 0, 433, 434, 5, 61, 0, 0, 434, 118, 1, 0, 0, 0, 435,
    436, 5, 38, 0, 0, 436, 437, 5, 38, 0, 0, 437, 120, 1, 0, 0, 0, 438, 439, 5,
    124, 0, 0, 439, 440, 5, 124, 0, 0, 440, 122, 1, 0, 0, 0, 441, 443, 3, 127,
    63, 0, 442, 441, 1, 0, 0, 0, 443, 446, 1, 0, 0, 0, 444, 442, 1, 0, 0, 0,
    444, 445, 1, 0, 0, 0, 445, 447, 1, 0, 0, 0, 446, 444, 1, 0, 0, 0, 447, 453,
    3, 125, 62, 0, 448, 452, 3, 125, 62, 0, 449, 452, 3, 131, 65, 0, 450, 452,
    3, 127, 63, 0, 451, 448, 1, 0, 0, 0, 451, 449, 1, 0, 0, 0, 451, 450, 1, 0,
    0, 0, 452, 455, 1, 0, 0, 0, 453, 451, 1, 0, 0, 0, 453, 454, 1, 0, 0, 0, 454,
    124, 1, 0, 0, 0, 455, 453, 1, 0, 0, 0, 456, 457, 7, 0, 0, 0, 457, 126, 1, 0,
    0, 0, 458, 459, 7, 1, 0, 0, 459, 128, 1, 0, 0, 0, 460, 462, 3, 131, 65, 0,
    461, 460, 1, 0, 0, 0, 462, 463, 1, 0, 0, 0, 463, 461, 1, 0, 0, 0, 463, 464,
    1, 0, 0, 0, 464, 467, 1, 0, 0, 0, 465, 467, 3, 133, 66, 0, 466, 461, 1, 0,
    0, 0, 466, 465, 1, 0, 0, 0, 467, 130, 1, 0, 0, 0, 468, 469, 7, 2, 0, 0, 469,
    132, 1, 0, 0, 0, 470, 471, 5, 48, 0, 0, 471, 473, 5, 120, 0, 0, 472, 474, 3,
    135, 67, 0, 473, 472, 1, 0, 0, 0, 474, 475, 1, 0, 0, 0, 475, 473, 1, 0, 0,
    0, 475, 476, 1, 0, 0, 0, 476, 134, 1, 0, 0, 0, 477, 478, 7, 3, 0, 0, 478,
    136, 1, 0, 0, 0, 479, 484, 5, 34, 0, 0, 480, 483, 3, 139, 69, 0, 481, 483,
    9, 0, 0, 0, 482, 480, 1, 0, 0, 0, 482, 481, 1, 0, 0, 0, 483, 486, 1, 0, 0,
    0, 484, 485, 1, 0, 0, 0, 484, 482, 1, 0, 0, 0, 485, 487, 1, 0, 0, 0, 486,
    484, 1, 0, 0, 0, 487, 488, 5, 34, 0, 0, 488, 138, 1, 0, 0, 0, 489, 490, 5,
    92, 0, 0, 490, 491, 7, 4, 0, 0, 491, 140, 1, 0, 0, 0, 492, 493, 5, 47, 0, 0,
    493, 494, 5, 42, 0, 0, 494, 498, 1, 0, 0, 0, 495, 497, 9, 0, 0, 0, 496, 495,
    1, 0, 0, 0, 497, 500, 1, 0, 0, 0, 498, 499, 1, 0, 0, 0, 498, 496, 1, 0, 0,
    0, 499, 501, 1, 0, 0, 0, 500, 498, 1, 0, 0, 0, 501, 502, 5, 42, 0, 0, 502,
    503, 5, 47, 0, 0, 503, 504, 1, 0, 0, 0, 504, 505, 6, 70, 0, 0, 505, 142, 1,
    0, 0, 0, 506, 507, 5, 47, 0, 0, 507, 508, 5, 47, 0, 0, 508, 512, 1, 0, 0, 0,
    509, 511, 8, 5, 0, 0, 510, 509, 1, 0, 0, 0, 511, 514, 1, 0, 0, 0, 512, 510,
    1, 0, 0, 0, 512, 513, 1, 0, 0, 0, 513, 516, 1, 0, 0, 0, 514, 512, 1, 0, 0,
    0, 515, 517, 5, 13, 0, 0, 516, 515, 1, 0, 0, 0, 516, 517, 1, 0, 0, 0, 517,
    518, 1, 0, 0, 0, 518, 519, 5, 10, 0, 0, 519, 520, 1, 0, 0, 0, 520, 521, 6,
    71, 0, 0, 521, 144, 1, 0, 0, 0, 522, 524, 7, 6, 0, 0, 523, 522, 1, 0, 0, 0,
    524, 525, 1, 0, 0, 0, 525, 523, 1, 0, 0, 0, 525, 526, 1, 0, 0, 0, 526, 527,
    1, 0, 0, 0, 527, 528, 6, 72, 0, 0, 528, 146, 1, 0, 0, 0, 18, 0, 155, 360,
    366, 374, 382, 444, 451, 453, 463, 466, 475, 482, 484, 498, 512, 516, 525,
    1, 0, 1, 0,
  ];

  private static __ATN: ATN;
  public static get _ATN(): ATN {
    if (!LexerCircom.__ATN) {
      LexerCircom.__ATN = new ATNDeserializer().deserialize(
        LexerCircom._serializedATN,
      );
    }

    return LexerCircom.__ATN;
  }

  static DecisionsToDFA = LexerCircom._ATN.decisionToState.map(
    (ds: DecisionState, index: number) => new DFA(ds, index),
  );
}
